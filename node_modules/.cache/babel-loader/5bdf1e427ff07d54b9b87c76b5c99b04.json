{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/thread-loader/dist/cjs.js!/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js!/home/jlawrence/10x/apps/OmsVue/node_modules/eslint-loader/index.js??ref--13-0!/home/jlawrence/10x/apps/OmsVue/src/store/settings.module.js","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/store/settings.module.js","mtime":1585672524041},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport api from '@/api/user';\nexport var state = {\n  items: [],\n  pagination: null\n};\nexport var mutations = {\n  set: function set(state, payload) {\n    state.items = payload;\n  },\n  delete: function _delete(state, id) {\n    var index = state.items.findIndex(function (x) {\n      return x.id == id;\n    });\n    state.items.splice(index, 1);\n  },\n  set_pagination: function set_pagination(state, pag) {\n    state.pagination = pag;\n  }\n};\nexport var actions = {\n  create: function create(context, payload) {\n    return new Promise(function (resolve, reject) {\n      api.create(payload.firstName, payload.lastName, payload.email, payload.roles, payload.password).then(function (res) {\n        resolve(res);\n      }).catch(function (res) {\n        reject(res);\n      });\n    });\n  },\n  fetch: function fetch(context, payload) {\n    return new Promise(function (resolve, reject) {\n      api.fetch(payload.query, payload.page).then(function (result) {\n        var users = result.data.success.data.data.map(function (x) {\n          x.firstName = x.first_name;\n          x.lastName = x.last_name;\n          delete x.first_name;\n          delete x.last_name;\n          return x;\n        });\n        context.commit('set_users', users);\n        var pag = result.data.success.data;\n        context.commit('set_pagination', {\n          page: pag.current_page,\n          pageSize: pag.per_page,\n          total: pag.total\n        });\n        resolve();\n      }).catch(function () {\n        reject();\n      });\n    });\n  },\n  update: function update(context, payload) {\n    return new Promise(function (resolve, reject) {\n      api.update(payload.userId, payload.firstName, payload.lastName, payload.roles).then(function () {\n        resolve();\n      }).catch(function () {\n        reject();\n      });\n    });\n  },\n  delete: function _delete(context, id) {\n    return new Promise(function (resolve, reject) {\n      api.delete(id).then(function (result) {\n        context.commit('fleet/delete', id);\n        resolve();\n      }).catch(function (result) {\n        reject();\n      });\n    });\n  }\n};\nexport var getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",{"version":3,"sources":["/home/jlawrence/10x/apps/OmsVue/src/store/settings.module.js"],"names":["api","state","items","pagination","mutations","set","payload","delete","id","index","findIndex","x","splice","set_pagination","pag","actions","create","context","Promise","resolve","reject","firstName","lastName","email","roles","password","then","res","catch","fetch","query","page","result","users","data","success","map","first_name","last_name","commit","current_page","pageSize","per_page","total","update","userId","getters"],"mappings":"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","sourcesContent":["import api from '@/api/user'\n\nexport const state = {\n    items: [],\n    pagination: null,\n}\n\nexport const mutations = {\n    set(state, payload) {\n        state.items = payload\n    },\n    delete(state, id) {\n        let index = state.items.findIndex(x => x.id == id)\n        state.items.splice(index, 1)\n    },\n    set_pagination(state, pag) {\n        state.pagination = pag\n    },\n}\n\nexport const actions = {\n    create(context, payload) {\n        return new Promise((resolve, reject) => {\n            api.create(\n                payload.firstName,\n                payload.lastName,\n                payload.email,\n                payload.roles,\n                payload.password\n            )\n                .then(res => {\n                    resolve(res)\n                })\n                .catch(res => {\n                    reject(res)\n                })\n        })\n    },\n    fetch(context, payload) {\n        return new Promise((resolve, reject) => {\n            api.fetch(payload.query, payload.page)\n                .then(result => {\n                    let users = result.data.success.data.data.map(x => {\n                        x.firstName = x.first_name\n                        x.lastName = x.last_name\n                        delete x.first_name\n                        delete x.last_name\n\n                        return x\n                    })\n                    context.commit('set_users', users)\n                    let pag = result.data.success.data\n                    context.commit('set_pagination', {\n                        page: pag.current_page,\n                        pageSize: pag.per_page,\n                        total: pag.total,\n                    })\n                    resolve()\n                })\n                .catch(() => {\n                    reject()\n                })\n        })\n    },\n    update(context, payload) {\n        return new Promise((resolve, reject) => {\n            api.update(\n                payload.userId,\n                payload.firstName,\n                payload.lastName,\n                payload.roles\n            )\n                .then(() => {\n                    resolve()\n                })\n                .catch(() => {\n                    reject()\n                })\n        })\n    },\n    delete(context, id) {\n        return new Promise((resolve, reject) => {\n            api.delete(id)\n                .then(result => {\n                    context.commit('fleet/delete', id)\n                    resolve()\n                })\n                .catch(result => {\n                    reject()\n                })\n        })\n    },\n}\n\nexport const getters = {}\n\nexport default {\n    state,\n    mutations,\n    actions,\n    getters,\n}\n"]}]}