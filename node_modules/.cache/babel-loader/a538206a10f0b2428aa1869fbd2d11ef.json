{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js!/home/jlawrence/10x/apps/OmsVue/node_modules/eslint-loader/index.js??ref--13-0!/home/jlawrence/10x/apps/OmsVue/src/store/fleet.module.js","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/store/fleet.module.js","mtime":1585672524041},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport api from '@/api/fleet';\nexport var state = {\n  items: [],\n  pagination: null\n};\nexport var mutations = {\n  set: function set(state, payload) {\n    state.items = payload;\n  },\n  delete: function _delete(state, id) {\n    var index = state.items.findIndex(function (x) {\n      return x.id == id;\n    });\n    state.items.splice(index, 1);\n  },\n  set_pagination: function set_pagination(state, pag) {\n    state.pagination = pag;\n  }\n};\nexport var actions = {\n  create: function create(context, payload) {\n    return new Promise(function (resolve, reject) {\n      api.create(payload).then(function (res) {\n        resolve(res);\n      }).catch(function (res) {\n        reject(res);\n      });\n    });\n  },\n  fetch: function fetch(context, payload) {\n    return new Promise(function (resolve, reject) {\n      api.fetch(payload.query, payload.page).then(function (result) {\n        var users = result.data.success.data.data.map(function (x) {\n          return x;\n        });\n        context.commit('set', users);\n        var pag = result.data.success.data;\n        context.commit('set_pagination', {\n          page: pag.current_page,\n          pageSize: pag.per_page,\n          total: pag.total\n        });\n        resolve();\n      }).catch(function () {\n        reject();\n      });\n    });\n  },\n  update: function update(context, payload) {\n    return new Promise(function (resolve, reject) {\n      api.update(payload.id, payload).then(function () {\n        resolve();\n      }).catch(function () {\n        reject();\n      });\n    });\n  },\n  delete: function _delete(context, id) {\n    return new Promise(function (resolve, reject) {\n      api.delete(id).then(function (result) {\n        context.commit('delete', id);\n        resolve();\n      }).catch(function (result) {\n        reject();\n      });\n    });\n  }\n};\nexport var getters = {};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",{"version":3,"sources":["/home/jlawrence/10x/apps/OmsVue/src/store/fleet.module.js"],"names":["api","state","items","pagination","mutations","set","payload","delete","id","index","findIndex","x","splice","set_pagination","pag","actions","create","context","Promise","resolve","reject","then","res","catch","fetch","query","page","result","users","data","success","map","commit","current_page","pageSize","per_page","total","update","getters","namespaced"],"mappings":"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","sourcesContent":["import api from '@/api/fleet'\n\nexport const state = {\n    items: [],\n    pagination: null,\n}\n\nexport const mutations = {\n    set(state, payload) {\n        state.items = payload\n    },\n    delete(state, id) {\n        let index = state.items.findIndex(x => x.id == id)\n        state.items.splice(index, 1)\n    },\n    set_pagination(state, pag) {\n        state.pagination = pag\n    },\n}\n\nexport const actions = {\n    create(context, payload) {\n        return new Promise((resolve, reject) => {\n            api.create(payload)\n                .then(res => {\n                    resolve(res)\n                })\n                .catch(res => {\n                    reject(res)\n                })\n        })\n    },\n    fetch(context, payload) {\n        return new Promise((resolve, reject) => {\n            api.fetch(payload.query, payload.page)\n                .then(result => {\n                    let users = result.data.success.data.data.map(x => {\n                        return x\n                    })\n                    context.commit('set', users)\n                    let pag = result.data.success.data\n                    context.commit('set_pagination', {\n                        page: pag.current_page,\n                        pageSize: pag.per_page,\n                        total: pag.total,\n                    })\n                    resolve()\n                })\n                .catch(() => {\n                    reject()\n                })\n        })\n    },\n    update(context, payload) {\n        return new Promise((resolve, reject) => {\n            api.update(payload.id, payload)\n                .then(() => {\n                    resolve()\n                })\n                .catch(() => {\n                    reject()\n                })\n        })\n    },\n    delete(context, id) {\n        return new Promise((resolve, reject) => {\n            api.delete(id)\n                .then(result => {\n                    context.commit('delete', id)\n                    resolve()\n                })\n                .catch(result => {\n                    reject()\n                })\n        })\n    },\n}\n\nexport const getters = {}\n\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions,\n    getters,\n}\n"]}]}