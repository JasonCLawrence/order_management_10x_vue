{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js!/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jlawrence/10x/apps/OmsVue/src/views/Users/UsersTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/views/Users/UsersTable.vue","mtime":1585672524045},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport mapGetters from 'vuex';\nimport _ from 'lodash';\nexport default {\n  name: 'users-table',\n  props: {\n    type: {\n      type: String\n    },\n    title: String\n  },\n  data: function data() {\n    return {\n      query: '',\n      page: 1\n    };\n  },\n  mounted: function mounted() {\n    if (this.$route.query.query) this.query = this.$route.query.query;\n    this.doSearch(); //this.$router.push({ query: this.query })\n  },\n  methods: {\n    updateQuery: _.debounce(function (query) {\n      this.query = query;\n      this.$router.push({\n        query: {\n          query: this.query\n        }\n      });\n      this.doSearch();\n    }, 200),\n    changePage: function changePage(page) {\n      this.page = page;\n      this.$router.push({\n        query: {\n          page: page\n        }\n      });\n      this.doSearch();\n    },\n    doSearch: function doSearch() {\n      this.$store.dispatch('fetchUsers', {\n        query: this.query,\n        page: this.page\n      });\n    },\n    viewUser: function viewUser(index) {\n      this.$router.push({\n        path: \"users/\".concat(index)\n      });\n    },\n    deleteUser: function deleteUser(id) {\n      var _this = this;\n\n      // console.log(id)\n      // console.log(this.users)\n      var user = this.users.find(function (el) {\n        return el.id == id;\n      }); // this.$swal.fire({\n      //     title: 'Delete User',\n      //     confirmButtonText: 'Delete',\n      //     showCancelButton: true,\n      //     text: `Are you sure you want to delete ${user.firstName}?`,\n      //     showLoaderOnConfirm: true,\n      // })\n\n      this.$swal.fire({\n        title: 'Delete User?',\n        text: \"Are you sure you want to delete \".concat(user.firstName, \"?\"),\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then(function (result) {\n        if (result.value) {\n          _this.$store.dispatch('delete_user', id).then(function (x) {\n            _this.$swal.fire('Deleted!', 'Your file has been deleted.', 'success');\n          }).catch(function (x) {\n            _this.$swal.fire('Error!', 'Unable to delete user!', 'error');\n          });\n        }\n      });\n    }\n  },\n  computed: {\n    users: function users() {\n      return this.$store.state.users.users;\n    },\n    pagination: function pagination() {\n      return this.$store.state.users.pagination;\n    }\n  }\n};",{"version":3,"sources":["UsersTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"card shadow\" :class=\"type === 'dark' ? 'bg-default': ''\">\n        <div class=\"card-header border-0\" :class=\"type === 'dark' ? 'bg-transparent': ''\">\n            <div class=\"row\">\n                <div class=\"col-md-10\">\n                    <base-input\n                        placeholder=\"Filter...\"\n                        addon-right-icon=\"ni ni-zoom-split-in\"\n                        v-model=\"query\"\n                        @input=\"updateQuery\"\n                    ></base-input>\n                </div>\n                <div class=\"col text-right\">\n                    <base-button type=\"primary\" @click=\"$emit('addUser')\">Add User</base-button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"table-responsive\">\n            <base-table\n                class=\"table align-items-center table-flush\"\n                :class=\"type === 'dark' ? 'table-dark': ''\"\n                :thead-classes=\"type === 'dark' ? 'thead-dark': 'thead-light'\"\n                tbody-classes=\"list\"\n                :data=\"users\"\n            >\n                <template slot=\"columns\">\n                    <th>Name</th>\n                    <th>Roles</th>\n                    <th>Email</th>\n                    <th>Actions</th>\n                </template>\n\n                <template slot-scope=\"{row}\">\n                    <th scope=\"row\">\n                        <div class=\"media align-items-center\">\n                            <!-- <a href=\"#\" class=\"avatar rounded-circle mr-3\">\n                <img alt=\"Image placeholder\" :src=\"row.img\" />\n                            </a>-->\n                            <div class=\"media-body\">\n                                <span class=\"name mb-0 text-sm\">{{row.firstName}} {{row.lastName}}</span>\n                            </div>\n                        </div>\n                    </th>\n                    <td>\n                        <badge class=\"badge-dot mr-4\" type=\"success\">\n                            <span\n                                v-for=\"(role, index) in row.roles\"\n                                class=\"status text-left text-uppercase\"\n                                :key=\"index\"\n                            >\n                                {{role.role.name}}\n                                <br />\n                            </span>\n                        </badge>\n                    </td>\n\n                    <td>\n                        <div class=\"d-flex align-items-center\">{{row.email}}</div>\n                    </td>\n\n                    <td>\n                        <div class=\"d-flex align-items-center\">\n                            <div>\n                                <base-button type=\"primary\" @click=\"viewUser(row.id)\">Edit</base-button>\n                                <base-button type=\"danger\" @click=\"deleteUser(row.id)\">Delete</base-button>\n                            </div>\n                        </div>\n                    </td>\n                </template>\n            </base-table>\n        </div>\n\n        <div\n            class=\"card-footer d-flex justify-content-end\"\n            :class=\"type === 'dark' ? 'bg-transparent': ''\"\n        >\n            <base-pagination\n                v-if=\"pagination!=null\"\n                :perPage=\"pagination.pageSize\"\n                :value=\"pagination.page\"\n                :total=\"pagination.total\"\n                @input=\"changePage\"\n            ></base-pagination>\n        </div>\n    </div>\n</template>\n<script>\nimport mapGetters from 'vuex'\nimport _ from 'lodash'\n\nexport default {\n    name: 'users-table',\n    props: {\n        type: {\n            type: String,\n        },\n        title: String,\n    },\n    data() {\n        return {\n            query: '',\n            page: 1,\n        }\n    },\n\n    mounted() {\n        if (this.$route.query.query) this.query = this.$route.query.query\n        this.doSearch()\n        //this.$router.push({ query: this.query })\n    },\n\n    methods: {\n        updateQuery: _.debounce(function(query) {\n            this.query = query\n            this.$router.push({ query: { query: this.query } })\n            this.doSearch()\n        }, 200),\n        changePage: function(page) {\n            this.page = page\n            this.$router.push({ query: { page: page } })\n            this.doSearch()\n        },\n        doSearch() {\n            this.$store.dispatch('fetchUsers', {\n                query: this.query,\n                page: this.page,\n            })\n        },\n        viewUser(index) {\n            this.$router.push({ path: `users/${index}` })\n        },\n        deleteUser(id) {\n            // console.log(id)\n            // console.log(this.users)\n            let user = this.users.find(el => el.id == id)\n            // this.$swal.fire({\n            //     title: 'Delete User',\n            //     confirmButtonText: 'Delete',\n            //     showCancelButton: true,\n            //     text: `Are you sure you want to delete ${user.firstName}?`,\n            //     showLoaderOnConfirm: true,\n            // })\n\n            this.$swal\n                .fire({\n                    title: 'Delete User?',\n                    text: `Are you sure you want to delete ${user.firstName}?`,\n                    type: 'warning',\n                    showCancelButton: true,\n                    confirmButtonColor: '#3085d6',\n                    cancelButtonColor: '#d33',\n                    confirmButtonText: 'Yes, delete it!',\n                })\n                .then(result => {\n                    if (result.value) {\n                        this.$store\n                            .dispatch('delete_user', id)\n                            .then(x => {\n                                this.$swal.fire(\n                                    'Deleted!',\n                                    'Your file has been deleted.',\n                                    'success'\n                                )\n                            })\n                            .catch(x => {\n                                this.$swal.fire(\n                                    'Error!',\n                                    'Unable to delete user!',\n                                    'error'\n                                )\n                            })\n                    }\n                })\n        },\n    },\n\n    computed: {\n        users() {\n            return this.$store.state.users.users\n        },\n        pagination() {\n            return this.$store.state.users.pagination\n        },\n    },\n}\n</script>\n<style>\n</style>\n"],"sourceRoot":"src/views/Users"}]}