{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/thread-loader/dist/cjs.js!/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js!/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jlawrence/10x/apps/OmsVue/src/components/Modal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/components/Modal.vue","mtime":1585672524041},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { SlideYUpTransition } from 'vue2-transitions';\nexport default {\n  name: 'modal',\n  components: {\n    SlideYUpTransition: SlideYUpTransition\n  },\n  props: {\n    show: Boolean,\n    showClose: {\n      type: Boolean,\n      default: true\n    },\n    type: {\n      type: String,\n      default: '',\n      validator: function validator(value) {\n        var acceptedValues = ['', 'notice', 'mini'];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description: 'Modal type (notice|mini|\"\") '\n    },\n    modalClasses: {\n      type: [Object, String],\n      description: 'Modal dialog css classes'\n    },\n    modalContentClasses: {\n      type: [Object, String],\n      description: 'Modal dialog content css classes'\n    },\n    gradient: {\n      type: String,\n      description: 'Modal gradient type (danger, primary etc)'\n    },\n    headerClasses: {\n      type: [Object, String],\n      description: 'Modal Header css classes'\n    },\n    bodyClasses: {\n      type: [Object, String],\n      description: 'Modal Body css classes'\n    },\n    footerClasses: {\n      type: [Object, String],\n      description: 'Modal Footer css classes'\n    },\n    animationDuration: {\n      type: Number,\n      default: 500,\n      description: 'Modal transition duration'\n    },\n    centered: {\n      type: Boolean,\n      default: false,\n      description: 'Center dialog vertically and horizontally'\n    }\n  },\n  data: function data() {\n    return {\n      clickStarted: false,\n      mouseInsideModal: false\n    };\n  },\n  methods: {\n    closeModal: function closeModal() {\n      this.$emit('update:show', false);\n      this.$emit('close');\n    },\n    clickStart: function clickStart() {\n      this.clickStarted = true;\n    },\n    clickEnd: function clickEnd() {\n      if (this.clickStarted == true && this.mouseInsideModal == false) {\n        this.closeModal();\n      }\n\n      this.clickStarted = false;\n    },\n    mouseEnter: function mouseEnter() {\n      this.clickStarted = false;\n      this.mouseInsideModal = true;\n    },\n    mouseLeave: function mouseLeave() {\n      this.mouseInsideModal = false;\n    }\n  },\n  watch: {\n    show: function show(val) {\n      var documentClasses = document.body.classList;\n\n      if (val) {\n        documentClasses.add('modal-open');\n      } else {\n        documentClasses.remove('modal-open');\n      }\n    }\n  }\n};",{"version":3,"sources":["Modal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <SlideYUpTransition :duration=\"animationDuration\">\n        <div\n            class=\"modal fade\"\n            @mousedown.self=\"clickStart\"\n            @mouseup.self=\"clickEnd\"\n            :class=\"[{'show d-block': show}, {'d-none': !show}, {'modal-mini': type === 'mini'}]\"\n            v-show=\"show\"\n            tabindex=\"-1\"\n            role=\"dialog\"\n            :aria-hidden=\"!show\"\n        >\n            <div\n                @mouseenter.self=\"mouseEnter\"\n                @mouseleave.self=\"mouseLeave\"\n                class=\"modal-dialog\"\n                :class=\"[{'modal-notice': type === 'notice'}, {'modal-dialog-centered':centered}, modalClasses]\"\n            >\n                <div\n                    class=\"modal-content\"\n                    :class=\"[gradient ? `bg-gradient-${gradient}` : '',modalContentClasses]\"\n                >\n                    <div class=\"modal-header\" :class=\"[headerClasses]\" v-if=\"$slots.header\">\n                        <slot name=\"header\"></slot>\n                        <slot name=\"close-button\">\n                            <button\n                                type=\"button\"\n                                class=\"close\"\n                                v-if=\"showClose\"\n                                @click=\"closeModal\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                            >\n                                <span :aria-hidden=\"!show\">Ã—</span>\n                            </button>\n                        </slot>\n                    </div>\n\n                    <div class=\"modal-body\" :class=\"bodyClasses\">\n                        <slot></slot>\n                    </div>\n\n                    <div class=\"modal-footer\" :class=\"footerClasses\" v-if=\"$slots.footer\">\n                        <slot name=\"footer\"></slot>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </SlideYUpTransition>\n</template>\n<script>\nimport { SlideYUpTransition } from 'vue2-transitions'\n\nexport default {\n    name: 'modal',\n    components: {\n        SlideYUpTransition,\n    },\n    props: {\n        show: Boolean,\n        showClose: {\n            type: Boolean,\n            default: true,\n        },\n        type: {\n            type: String,\n            default: '',\n            validator(value) {\n                let acceptedValues = ['', 'notice', 'mini']\n                return acceptedValues.indexOf(value) !== -1\n            },\n            description: 'Modal type (notice|mini|\"\") ',\n        },\n        modalClasses: {\n            type: [Object, String],\n            description: 'Modal dialog css classes',\n        },\n        modalContentClasses: {\n            type: [Object, String],\n            description: 'Modal dialog content css classes',\n        },\n        gradient: {\n            type: String,\n            description: 'Modal gradient type (danger, primary etc)',\n        },\n        headerClasses: {\n            type: [Object, String],\n            description: 'Modal Header css classes',\n        },\n        bodyClasses: {\n            type: [Object, String],\n            description: 'Modal Body css classes',\n        },\n        footerClasses: {\n            type: [Object, String],\n            description: 'Modal Footer css classes',\n        },\n        animationDuration: {\n            type: Number,\n            default: 500,\n            description: 'Modal transition duration',\n        },\n        centered: {\n            type: Boolean,\n            default: false,\n            description: 'Center dialog vertically and horizontally',\n        },\n    },\n    data() {\n        return {\n            clickStarted: false,\n            mouseInsideModal: false,\n        }\n    },\n    methods: {\n        closeModal() {\n            this.$emit('update:show', false)\n            this.$emit('close')\n        },\n        clickStart() {\n            this.clickStarted = true\n        },\n        clickEnd() {\n            if (this.clickStarted == true && this.mouseInsideModal == false) {\n                this.closeModal()\n            }\n\n            this.clickStarted = false\n        },\n        mouseEnter() {\n            this.clickStarted = false\n            this.mouseInsideModal = true\n        },\n        mouseLeave() {\n            this.mouseInsideModal = false\n        },\n    },\n    watch: {\n        show(val) {\n            let documentClasses = document.body.classList\n            if (val) {\n                documentClasses.add('modal-open')\n            } else {\n                documentClasses.remove('modal-open')\n            }\n        },\n    },\n}\n</script>\n<style>\n.modal.show {\n    background-color: rgba(0, 0, 0, 0.3);\n}\n</style>\n"],"sourceRoot":"src/components"}]}