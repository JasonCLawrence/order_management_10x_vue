{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/thread-loader/dist/cjs.js!/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js!/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jlawrence/10x/apps/OmsVue/src/views/Reports/ReportsTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/views/Reports/ReportsTable.vue","mtime":1585672524045},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/jlawrence/10x/apps/OmsVue/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find-index\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from 'lodash';\nimport api from '@/api/report';\nimport flatPicker from 'vue-flatpickr-component';\nimport moment from 'moment';\nimport ExportDetailsDialog from \"./ExportDetailsDialog\"; //https://stackoverflow.com/questions/2998784/how-to-output-integers-with-leading-zeros-in-javascript\n\nfunction pad(num, size) {\n  var s = num + '';\n\n  while (s.length < size) {\n    s = '0' + s;\n  }\n\n  return s;\n} // https://stackoverflow.com/questions/13571700/get-first-and-last-date-of-current-month-with-javascript-or-jquery\n// function monthStart() {\n//     var date = new Date(),\n//         y = date.getFullYear(),\n//         m = date.getMonth()\n//     var dateObj = new Date(y, m, 1)\n//     var month = dateObj.getUTCMonth() + 1\n//     var day = dateObj.getUTCDate()\n//     var year = dateObj.getUTCFullYear()\n//     const date = year + '-' + pad(month, 2) + '-' + pad(day, 2)\n//     return date\n// }\n// function monthEnd() {\n//     var date = new Date(),\n//         y = date.getFullYear(),\n//         m = date.getMonth()\n//     var dateObj = new Date(y, m + 1, 0)\n//     var month = dateObj.getUTCMonth() + 1\n//     var day = dateObj.getUTCDate()\n//     var year = dateObj.getUTCFullYear()\n//     const date = year + '-' + pad(month, 2) + '-' + pad(day, 2)\n//     return date\n// }\n\n\nexport default {\n  components: {\n    flatPicker: flatPicker,\n    ExportDetailsDialog: ExportDetailsDialog\n  },\n  name: 'reports-table',\n  props: {\n    type: {\n      type: String\n    },\n    title: String\n  },\n  data: function data() {\n    return {\n      query: '',\n      page: 1,\n      model: {\n        driver_id: 0,\n        customer_id: 0,\n        warehouse_id: 0,\n        completed: 'any',\n        type: 'any',\n        created_start: moment().startOf('month').format('YYYY-MM-DD'),\n        created_end: moment().endOf('month').format('YYYY-MM-DD')\n      },\n      drivers: [],\n      customers: [],\n      warehouses: []\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.fetchReport();\n    api.fetchDrivers().then(function (result) {\n      var drivers = result.data.success.data.data;\n      drivers = drivers.filter(function (x) {\n        var res = x.roles.findIndex(function (r) {\n          return r.role.name == 'driver';\n        }) !== -1;\n        return res;\n      });\n      _this.drivers = drivers;\n    });\n    api.fetchWarehouses().then(function (result) {\n      var warehouses = result.data.success.data.data;\n      _this.warehouses = warehouses;\n    });\n    api.fetchCustomers().then(function (result) {\n      var customers = result.data.success.data.data;\n      _this.customers = customers;\n    });\n  },\n  methods: {\n    fetchReport: function fetchReport() {\n      this.$store.dispatch('report/fetch', this.queryModel);\n    },\n    exportReport: function exportReport() {\n      api.downloadReport(this.queryModel); // api.fetchReportExcel(this.queryModel).then(data => {\n      //     const blob = new Blob([data], { type: 'application/xlsx' })\n      //     const url = window.URL.createObjectURL(blob)\n      //     var a = document.createElement('a')\n      //     document.body.appendChild(a)\n      //     a.style.display = 'none'\n      //     a.href = url\n      //     a.download = 'Report.xlsx'\n      //     a.click()\n      //     window.URL.revokeObjectURL(url)\n      // })\n    },\n    showDetailsDialog: function showDetailsDialog() {\n      this.$refs.detailsDialog.show(this.queryModel);\n    },\n    exportReportDetails: function exportReportDetails() {\n      api.downloadReportDetails(this.queryModel);\n    }\n  },\n  computed: {\n    report: function report() {\n      return this.$store.state.report.items;\n    },\n    pagination: function pagination() {\n      return this.$store.state.report.pagination;\n    },\n    queryModel: function queryModel() {\n      return _objectSpread({}, this.model, {\n        completed: this.model.completed == 'any' ? null : this.model.completed == 'yes' ? 1 : 0,\n        type: this.model.type == 'any' ? null : this.model.type\n      });\n    }\n  },\n  watch: {\n    model: {\n      handler: function handler() {\n        this.fetchReport();\n      },\n      deep: true\n    } // queryModel() {\n    //     this.fetchReport()\n    // },\n\n  }\n};",{"version":3,"sources":["ReportsTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"card shadow\" :class=\"type === 'dark' ? 'bg-default': ''\">\n        <!-- Details Dialog -->\n        <export-details-dialog ref=\"detailsDialog\" @download=\"exportReportDetails()\" />\n        <div class=\"card-header border-0\" :class=\"type === 'dark' ? 'bg-transparent': ''\">\n            <div class=\"row\">\n                <div class=\"col-md-2\">\n                    <div class=\"form-group\">\n                        <label class=\"form-control-label\">Customer</label>\n                        <div class=\"has-label\">\n                            <select class=\"form-control\" v-model=\"model.customer_id\">\n                                <option value=\"0\" default>Any</option>\n                                <option\n                                    v-for=\"(el, key) in customers\"\n                                    :value=\"el.id\"\n                                    :key=\"key\"\n                                >{{el.name}}</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-2\">\n                    <div class=\"form-group\">\n                        <label class=\"form-control-label\">Warehouse</label>\n                        <div class=\"has-label\">\n                            <select class=\"form-control\" v-model=\"model.warehouse_id\">\n                                <option :value=\"0\">Any</option>\n                                <option\n                                    v-for=\"(el, key) in warehouses\"\n                                    :value=\"el.id\"\n                                    :key=\"key\"\n                                >{{el.name}}</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-2\">\n                    <div class=\"form-group\">\n                        <label class=\"form-control-label\">Driver</label>\n                        <div class=\"has-label\">\n                            <select class=\"form-control\" v-model=\"model.driver_id\">\n                                <option :value=\"0\">Any</option>\n                                <option :value=\"-1\">Assigned</option>\n                                <option :value=\"-2\">Unassigned</option>\n                                <option\n                                    v-for=\"(driver, key) in drivers\"\n                                    :value=\"driver.id\"\n                                    :key=\"key\"\n                                >{{driver.first_name}} {{driver.last_name}}</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-md-2\">\n                    <base-input label=\"Start Date\">\n                        <flat-picker\n                            slot-scope=\"{focus, blur}\"\n                            @on-open=\"focus\"\n                            @on-close=\"blur\"\n                            :config=\"{allowInput: true}\"\n                            class=\"form-control datepicker\"\n                            v-model=\"model.created_start\"\n                        ></flat-picker>\n                    </base-input>\n                </div>\n                <div class=\"col-md-2\">\n                    <base-input label=\"End Date\">\n                        <flat-picker\n                            slot-scope=\"{focus, blur}\"\n                            @on-open=\"focus\"\n                            @on-close=\"blur\"\n                            :config=\"{allowInput: true}\"\n                            class=\"form-control datepicker\"\n                            v-model=\"model.created_end\"\n                        ></flat-picker>\n                    </base-input>\n                </div>\n                <div class=\"col-md-1\">\n                    <div class=\"form-group\">\n                        <label class=\"form-control-label\">Type</label>\n                        <div class=\"has-label\">\n                            <select id=\"make\" name=\"type\" class=\"form-control\" v-model=\"model.type\">\n                                <option value=\"any\">All</option>\n                                <option value=\"service\">Service</option>\n                                <option value=\"invoice\">Invoice</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-1\">\n                    <div class=\"form-group\">\n                        <label class=\"form-control-label\">Completed</label>\n                        <div class=\"has-label\">\n                            <select\n                                id=\"completed\"\n                                name=\"type\"\n                                class=\"form-control\"\n                                v-model=\"model.completed\"\n                            >\n                                <option value=\"any\">Any</option>\n                                <option value=\"yes\">Yes</option>\n                                <option value=\"no\">No</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n                <!-- <div class=\"col-md-1\">\n                    <label class=\"form-control-label\">&nbsp;</label>\n                    <br />\n                    <base-button type=\"primary\" @click=\"fetchReport()\">Generate</base-button>\n                </div>-->\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-8\"></div>\n                <div class=\"col-md-4\" style=\"text-align:right\">\n                    <base-button type=\"primary\" @click=\"exportReport()\">Export Header</base-button>\n                    <base-button type=\"primary\" @click=\"showDetailsDialog()\">Export Details</base-button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"table-responsive\">\n            <base-table\n                class=\"table align-items-center table-flush\"\n                :class=\"type === 'dark' ? 'table-dark': ''\"\n                :thead-classes=\"type === 'dark' ? 'thead-dark': 'thead-light'\"\n                tbody-classes=\"list\"\n                :data=\"report\"\n            >\n                <template slot=\"columns\">\n                    <th>Customer</th>\n                    <th>Driver</th>\n                    <th>Warehouse</th>\n                    <th>Type</th>\n                    <th>Completed</th>\n                    <th>Created By</th>\n                    <th>Created At</th>\n                </template>\n\n                <template slot-scope=\"{row}\">\n                    <th scope=\"row\">\n                        <div class>\n                            <span class=\"name mb-0 text-sm\">{{row.customer}}</span>\n                        </div>\n                    </th>\n\n                    <td>\n                        <span>{{row.driver}}</span>\n                    </td>\n\n                    <td>\n                        <span>{{row.warehouse}}</span>\n                    </td>\n\n                    <td>\n                        <span>{{row.type}}</span>\n                    </td>\n                    <td>\n                        <span>{{row.completed}}</span>\n                    </td>\n\n                    <td>\n                        <span>{{row.created_by}}</span>\n                    </td>\n\n                    <td>\n                        <span>{{row.created_at}}</span>\n                    </td>\n                </template>\n            </base-table>\n        </div>\n\n        <div\n            class=\"card-footer d-flex justify-content-end\"\n            :class=\"type === 'dark' ? 'bg-transparent': ''\"\n        >\n            <base-pagination\n                v-if=\"pagination!=null\"\n                :perPage=\"pagination.pageSize\"\n                :value=\"pagination.page\"\n                :total=\"pagination.total\"\n            ></base-pagination>\n        </div>\n    </div>\n</template>\n<script>\nimport _ from 'lodash'\nimport api from '@/api/report'\nimport flatPicker from 'vue-flatpickr-component'\nimport moment from 'moment'\nimport ExportDetailsDialog from './ExportDetailsDialog'\n\n//https://stackoverflow.com/questions/2998784/how-to-output-integers-with-leading-zeros-in-javascript\nfunction pad(num, size) {\n    var s = num + ''\n    while (s.length < size) s = '0' + s\n    return s\n}\n\n// https://stackoverflow.com/questions/13571700/get-first-and-last-date-of-current-month-with-javascript-or-jquery\n// function monthStart() {\n//     var date = new Date(),\n//         y = date.getFullYear(),\n//         m = date.getMonth()\n//     var dateObj = new Date(y, m, 1)\n//     var month = dateObj.getUTCMonth() + 1\n//     var day = dateObj.getUTCDate()\n//     var year = dateObj.getUTCFullYear()\n\n//     const date = year + '-' + pad(month, 2) + '-' + pad(day, 2)\n//     return date\n// }\n\n// function monthEnd() {\n//     var date = new Date(),\n//         y = date.getFullYear(),\n//         m = date.getMonth()\n//     var dateObj = new Date(y, m + 1, 0)\n//     var month = dateObj.getUTCMonth() + 1\n//     var day = dateObj.getUTCDate()\n//     var year = dateObj.getUTCFullYear()\n\n//     const date = year + '-' + pad(month, 2) + '-' + pad(day, 2)\n//     return date\n// }\n\nexport default {\n    components: { flatPicker, ExportDetailsDialog },\n    name: 'reports-table',\n    props: {\n        type: {\n            type: String,\n        },\n        title: String,\n    },\n    data() {\n        return {\n            query: '',\n            page: 1,\n            model: {\n                driver_id: 0,\n                customer_id: 0,\n                warehouse_id: 0,\n                completed: 'any',\n                type: 'any',\n                created_start: moment()\n                    .startOf('month')\n                    .format('YYYY-MM-DD'),\n                created_end: moment()\n                    .endOf('month')\n                    .format('YYYY-MM-DD'),\n            },\n            drivers: [],\n            customers: [],\n            warehouses: [],\n        }\n    },\n\n    mounted() {\n        this.fetchReport()\n\n        api.fetchDrivers().then(result => {\n            let drivers = result.data.success.data.data\n\n            drivers = drivers.filter(x => {\n                let res =\n                    x.roles.findIndex(r => {\n                        return r.role.name == 'driver'\n                    }) !== -1\n                return res\n            })\n            this.drivers = drivers\n        })\n\n        api.fetchWarehouses().then(result => {\n            let warehouses = result.data.success.data.data\n            this.warehouses = warehouses\n        })\n\n        api.fetchCustomers().then(result => {\n            let customers = result.data.success.data.data\n            this.customers = customers\n        })\n    },\n\n    methods: {\n        fetchReport() {\n            this.$store.dispatch('report/fetch', this.queryModel)\n        },\n        exportReport() {\n            api.downloadReport(this.queryModel)\n\n            // api.fetchReportExcel(this.queryModel).then(data => {\n            //     const blob = new Blob([data], { type: 'application/xlsx' })\n            //     const url = window.URL.createObjectURL(blob)\n\n            //     var a = document.createElement('a')\n            //     document.body.appendChild(a)\n            //     a.style.display = 'none'\n\n            //     a.href = url\n            //     a.download = 'Report.xlsx'\n            //     a.click()\n            //     window.URL.revokeObjectURL(url)\n            // })\n        },\n        showDetailsDialog() {\n            this.$refs.detailsDialog.show(this.queryModel)\n        },\n        exportReportDetails() {\n            api.downloadReportDetails(this.queryModel)\n        },\n    },\n\n    computed: {\n        report() {\n            return this.$store.state.report.items\n        },\n        pagination() {\n            return this.$store.state.report.pagination\n        },\n        queryModel() {\n            return {\n                ...this.model,\n                completed:\n                    this.model.completed == 'any'\n                        ? null\n                        : this.model.completed == 'yes'\n                        ? 1\n                        : 0,\n                type: this.model.type == 'any' ? null : this.model.type,\n            }\n        },\n    },\n\n    watch: {\n        model: {\n            handler() {\n                this.fetchReport()\n            },\n            deep: true,\n        },\n        // queryModel() {\n        //     this.fetchReport()\n        // },\n    },\n}\n</script>\n<style>\n</style>\n"],"sourceRoot":"src/views/Reports"}]}