{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/thread-loader/dist/cjs.js!/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js!/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jlawrence/10x/apps/OmsVue/src/components/BaseCheckbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/components/BaseCheckbox.vue","mtime":1585672524037},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { randomString } from \"./stringUtils\";\nexport default {\n  name: 'base-checkbox',\n  model: {\n    prop: 'checked'\n  },\n  props: {\n    checked: {\n      type: [Array, Boolean],\n      description: 'Whether checkbox is checked'\n    },\n    disabled: {\n      type: Boolean,\n      description: 'Whether checkbox is disabled'\n    },\n    inline: {\n      type: Boolean,\n      description: 'Whether checkbox is inline'\n    }\n  },\n  data: function data() {\n    return {\n      cbId: '',\n      touched: false\n    };\n  },\n  computed: {\n    model: {\n      get: function get() {\n        return this.checked;\n      },\n      set: function set(check) {\n        if (!this.touched) {\n          this.touched = true;\n        }\n\n        this.$emit('input', check);\n      }\n    },\n    inlineClass: function inlineClass() {\n      if (this.inline) {\n        return \"form-check-inline\";\n      }\n\n      return '';\n    }\n  },\n  mounted: function mounted() {\n    this.cbId = randomString();\n  }\n};",{"version":3,"sources":["BaseCheckbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAiBA,SAAA,YAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,KAAA,EAAA,OAAA,CADA;AAEA,MAAA,WAAA,EAAA;AAFA,KADA;AAKA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,WAAA,EAAA;AAFA,KALA;AASA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,WAAA,EAAA;AAFA;AATA,GALA;AAmBA,EAAA,IAnBA,kBAmBA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GAxBA;AAyBA,EAAA,QAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,OAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,YAAA,CAAA,KAAA,OAAA,EAAA;AACA,eAAA,OAAA,GAAA,IAAA;AACA;;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA;AATA,KADA;AAYA,IAAA,WAZA,yBAYA;AACA,UAAA,KAAA,MAAA,EAAA;AACA;AACA;;AACA,aAAA,EAAA;AACA;AAjBA,GAzBA;AA4CA,EAAA,OA5CA,qBA4CA;AACA,SAAA,IAAA,GAAA,YAAA,EAAA;AACA;AA9CA,CAAA","sourcesContent":["<template>\n    <div class=\"custom-control custom-checkbox\" :class=\"[{disabled: disabled}, inlineClass]\">\n        <input\n            :id=\"cbId\"\n            class=\"custom-control-input\"\n            type=\"checkbox\"\n            :disabled=\"disabled\"\n            v-model=\"model\"\n        />\n        <label :for=\"cbId\" class=\"custom-control-label\" @click=\"$emit('click')\">\n            <slot>\n                <span v-if=\"inline\">&nbsp;</span>\n            </slot>\n        </label>\n    </div>\n</template>\n<script>\nimport { randomString } from './stringUtils'\n\nexport default {\n    name: 'base-checkbox',\n    model: {\n        prop: 'checked',\n    },\n    props: {\n        checked: {\n            type: [Array, Boolean],\n            description: 'Whether checkbox is checked',\n        },\n        disabled: {\n            type: Boolean,\n            description: 'Whether checkbox is disabled',\n        },\n        inline: {\n            type: Boolean,\n            description: 'Whether checkbox is inline',\n        },\n    },\n    data() {\n        return {\n            cbId: '',\n            touched: false,\n        }\n    },\n    computed: {\n        model: {\n            get() {\n                return this.checked\n            },\n            set(check) {\n                if (!this.touched) {\n                    this.touched = true\n                }\n                this.$emit('input', check)\n            },\n        },\n        inlineClass() {\n            if (this.inline) {\n                return `form-check-inline`\n            }\n            return ''\n        },\n    },\n    mounted() {\n        this.cbId = randomString()\n    },\n}\n</script>\n"],"sourceRoot":"src/components"}]}