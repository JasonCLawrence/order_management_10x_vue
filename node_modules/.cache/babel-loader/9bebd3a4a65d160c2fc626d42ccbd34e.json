{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/thread-loader/dist/cjs.js!/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js!/home/jlawrence/10x/apps/OmsVue/node_modules/eslint-loader/index.js??ref--13-0!/home/jlawrence/10x/apps/OmsVue/src/store/report.module.js","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/store/report.module.js","mtime":1585672524041},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport api from '@/api/report';\nexport var state = {\n  items: []\n};\nexport var mutations = {\n  set: function set(state, payload) {\n    state.items = payload;\n  },\n  delete: function _delete(state, id) {\n    var index = state.items.findIndex(function (x) {\n      return x.id == id;\n    });\n    state.items.splice(index, 1);\n  }\n};\nexport var actions = {\n  fetch: function fetch(context, payload) {\n    return new Promise(function (resolve, reject) {\n      api.fetch(payload).then(function (result) {\n        var items = result.data.success.data.map(function (x) {\n          return x;\n        });\n        context.commit('set', items);\n        console.log(items);\n        resolve(items);\n      }).catch(function () {\n        reject();\n      });\n    });\n  }\n};\nexport var getters = {};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",{"version":3,"sources":["/home/jlawrence/10x/apps/OmsVue/src/store/report.module.js"],"names":["api","state","items","mutations","set","payload","delete","id","index","findIndex","x","splice","actions","fetch","context","Promise","resolve","reject","then","result","data","success","map","commit","console","log","catch","getters","namespaced"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,cAAhB;AAEA,OAAO,IAAMC,KAAK,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAAd;AAIP,OAAO,IAAMC,SAAS,GAAG;AACrBC,EAAAA,GADqB,eACjBH,KADiB,EACVI,OADU,EACD;AAChBJ,IAAAA,KAAK,CAACC,KAAN,GAAcG,OAAd;AACH,GAHoB;AAIrBC,EAAAA,MAJqB,mBAIdL,KAJc,EAIPM,EAJO,EAIH;AACd,QAAIC,KAAK,GAAGP,KAAK,CAACC,KAAN,CAAYO,SAAZ,CAAsB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACH,EAAF,IAAQA,EAAZ;AAAA,KAAvB,CAAZ;AACAN,IAAAA,KAAK,CAACC,KAAN,CAAYS,MAAZ,CAAmBH,KAAnB,EAA0B,CAA1B;AACH;AAPoB,CAAlB;AAUP,OAAO,IAAMI,OAAO,GAAG;AACnBC,EAAAA,KADmB,iBACbC,OADa,EACJT,OADI,EACK;AACpB,WAAO,IAAIU,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCjB,MAAAA,GAAG,CAACa,KAAJ,CAAUR,OAAV,EACKa,IADL,CACU,UAAAC,MAAM,EAAI;AACZ,YAAIjB,KAAK,GAAGiB,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBD,IAApB,CAAyBE,GAAzB,CAA6B,UAAAZ,CAAC,EAAI;AAC1C,iBAAOA,CAAP;AACH,SAFW,CAAZ;AAGAI,QAAAA,OAAO,CAACS,MAAR,CAAe,KAAf,EAAsBrB,KAAtB;AACAsB,QAAAA,OAAO,CAACC,GAAR,CAAYvB,KAAZ;AACAc,QAAAA,OAAO,CAACd,KAAD,CAAP;AACH,OARL,EASKwB,KATL,CASW,YAAM;AACTT,QAAAA,MAAM;AACT,OAXL;AAYH,KAbM,CAAP;AAcH;AAhBkB,CAAhB;AAmBP,OAAO,IAAMU,OAAO,GAAG,EAAhB;AAEP,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAEX3B,EAAAA,KAAK,EAALA,KAFW;AAGXE,EAAAA,SAAS,EAATA,SAHW;AAIXS,EAAAA,OAAO,EAAPA,OAJW;AAKXe,EAAAA,OAAO,EAAPA;AALW,CAAf","sourcesContent":["import api from '@/api/report'\n\nexport const state = {\n    items: [],\n}\n\nexport const mutations = {\n    set(state, payload) {\n        state.items = payload\n    },\n    delete(state, id) {\n        let index = state.items.findIndex(x => x.id == id)\n        state.items.splice(index, 1)\n    },\n}\n\nexport const actions = {\n    fetch(context, payload) {\n        return new Promise((resolve, reject) => {\n            api.fetch(payload)\n                .then(result => {\n                    let items = result.data.success.data.map(x => {\n                        return x\n                    })\n                    context.commit('set', items)\n                    console.log(items)\n                    resolve(items)\n                })\n                .catch(() => {\n                    reject()\n                })\n        })\n    },\n}\n\nexport const getters = {}\n\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions,\n    getters,\n}\n"]}]}