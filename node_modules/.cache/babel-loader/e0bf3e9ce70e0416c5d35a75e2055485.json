{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/thread-loader/dist/cjs.js!/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js!/home/jlawrence/10x/apps/OmsVue/node_modules/eslint-loader/index.js??ref--13-0!/home/jlawrence/10x/apps/OmsVue/src/store/users.module.js","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/store/users.module.js","mtime":1585672524041},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/jlawrence/10x/apps/OmsVue/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find-index\";\nimport userApi from '@/api/user';\nexport var state = {\n  users: [],\n  pagination: null\n};\nexport var mutations = {\n  set_users: function set_users(state, payload) {\n    state.users = payload;\n  },\n  delete_user: function delete_user(state, id) {\n    var index = state.users.findIndex(function (x) {\n      return x.id == id;\n    });\n    state.users.splice(index, 1);\n  },\n  set_pagination: function set_pagination(state, pag) {\n    state.pagination = pag;\n  }\n};\nexport var actions = {\n  createUser: function createUser(context, payload) {\n    return new Promise(function (resolve, reject) {\n      userApi.create(payload.firstName, payload.lastName, payload.email, payload.roles, payload.password).then(function (res) {\n        resolve(res);\n      }).catch(function (res) {\n        reject(res);\n      });\n    });\n  },\n  fetchUsers: function () {\n    var _fetchUsers = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(context, payload) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                userApi.fetchUsers(payload.query, payload.page).then(function (result) {\n                  //context.commit('user_update_info', payload)\n                  // console.log(result)\n                  //console.log(context)\n                  var users = result.data.success.data.data.map(function (x) {\n                    x.firstName = x.first_name;\n                    x.lastName = x.last_name;\n                    delete x.first_name;\n                    delete x.last_name;\n                    return x;\n                  }); // console.log(users)\n\n                  context.commit('set_users', users);\n                  var pag = result.data.success.data;\n                  context.commit('set_pagination', {\n                    page: pag.current_page,\n                    pageSize: pag.per_page,\n                    total: pag.total\n                  });\n                  resolve();\n                }).catch(function () {\n                  reject();\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function fetchUsers(_x, _x2) {\n      return _fetchUsers.apply(this, arguments);\n    }\n\n    return fetchUsers;\n  }(),\n  deleteUser: function deleteUser(context, id) {\n    return new Promise(function (resolve, reject) {\n      userApi.deleteUser(id).then(function (result) {\n        context.commit('delete_user', id);\n        resolve();\n      }).catch(function (result) {\n        reject();\n      });\n    });\n  },\n  updateBasicInfo: function updateBasicInfo(context, payload) {\n    return new Promise(function (resolve, reject) {\n      userApi.updateInfo(payload.userId, payload.firstName, payload.lastName, payload.roles).then(function () {\n        //context.commit('user_update_info', payload)\n        resolve();\n      }).catch(function () {\n        reject();\n      });\n    });\n  },\n  updateEmail: function updateEmail(context, payload) {\n    return new Promise(function (resolve, reject) {\n      userApi.updateEmail(payload.userId, payload.email).then(function () {\n        //context.commit('user_update_email', payload)\n        resolve();\n      }).catch(function () {\n        reject();\n      });\n    });\n  },\n  updatePassword: function updatePassword(context, payload) {\n    return new Promise(function (resolve, reject) {\n      userApi.updatePassword(payload.userId, payload.password).then(function () {\n        //context.commit('user_update_password', payload)\n        resolve();\n      }).catch(function () {\n        reject();\n      });\n    });\n  }\n};\nexport var getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",{"version":3,"sources":["/home/jlawrence/10x/apps/OmsVue/src/store/users.module.js"],"names":["userApi","state","users","pagination","mutations","set_users","payload","delete_user","id","index","findIndex","x","splice","set_pagination","pag","actions","createUser","context","Promise","resolve","reject","create","firstName","lastName","email","roles","password","then","res","catch","fetchUsers","query","page","result","data","success","map","first_name","last_name","commit","current_page","pageSize","per_page","total","deleteUser","updateBasicInfo","updateInfo","userId","updateEmail","updatePassword","getters"],"mappings":"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","sourcesContent":["import userApi from '@/api/user'\n\nexport const state = {\n    users: [],\n    pagination: null,\n}\n\nexport const mutations = {\n    set_users(state, payload) {\n        state.users = payload\n    },\n    delete_user(state, id) {\n        let index = state.users.findIndex(x => x.id == id)\n        state.users.splice(index, 1)\n    },\n    set_pagination(state, pag) {\n        state.pagination = pag\n    },\n}\n\nexport const actions = {\n    createUser(context, payload) {\n        return new Promise((resolve, reject) => {\n            userApi\n                .create(\n                    payload.firstName,\n                    payload.lastName,\n                    payload.email,\n                    payload.roles,\n                    payload.password\n                )\n                .then(res => {\n                    resolve(res)\n                })\n                .catch(res => {\n                    reject(res)\n                })\n        })\n    },\n    async fetchUsers(context, payload) {\n        return new Promise((resolve, reject) => {\n            userApi\n                .fetchUsers(payload.query, payload.page)\n                .then(result => {\n                    //context.commit('user_update_info', payload)\n                    // console.log(result)\n                    //console.log(context)\n                    let users = result.data.success.data.data.map(x => {\n                        x.firstName = x.first_name\n                        x.lastName = x.last_name\n                        delete x.first_name\n                        delete x.last_name\n\n                        return x\n                    })\n                    // console.log(users)\n                    context.commit('set_users', users)\n                    let pag = result.data.success.data\n                    context.commit('set_pagination', {\n                        page: pag.current_page,\n                        pageSize: pag.per_page,\n                        total: pag.total,\n                    })\n                    resolve()\n                })\n                .catch(() => {\n                    reject()\n                })\n        })\n    },\n    deleteUser(context, id) {\n        return new Promise((resolve, reject) => {\n            userApi\n                .deleteUser(id)\n                .then(result => {\n                    context.commit('delete_user', id)\n                    resolve()\n                })\n                .catch(result => {\n                    reject()\n                })\n        })\n    },\n    updateBasicInfo(context, payload) {\n        return new Promise((resolve, reject) => {\n            userApi\n                .updateInfo(\n                    payload.userId,\n                    payload.firstName,\n                    payload.lastName,\n                    payload.roles\n                )\n                .then(() => {\n                    //context.commit('user_update_info', payload)\n                    resolve()\n                })\n                .catch(() => {\n                    reject()\n                })\n        })\n    },\n    updateEmail(context, payload) {\n        return new Promise((resolve, reject) => {\n            userApi\n                .updateEmail(payload.userId, payload.email)\n                .then(() => {\n                    //context.commit('user_update_email', payload)\n                    resolve()\n                })\n                .catch(() => {\n                    reject()\n                })\n        })\n    },\n    updatePassword(context, payload) {\n        return new Promise((resolve, reject) => {\n            userApi\n                .updatePassword(payload.userId, payload.password)\n                .then(() => {\n                    //context.commit('user_update_password', payload)\n                    resolve()\n                })\n                .catch(() => {\n                    reject()\n                })\n        })\n    },\n}\n\nexport const getters = {}\n\nexport default {\n    state,\n    mutations,\n    actions,\n    getters,\n}\n"]}]}