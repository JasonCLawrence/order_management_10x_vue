{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/thread-loader/dist/cjs.js!/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js!/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jlawrence/10x/apps/OmsVue/src/views/Orders/ImportInvoiceDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/views/Orders/ImportInvoiceDialog.vue","mtime":1585672524045},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"/home/jlawrence/10x/apps/OmsVue/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.typed.uint8-array\";\nimport \"core-js/modules/es6.regexp.replace\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport api from '@/api/order';\nimport xlsx from 'xlsx'; //https://stackoverflow.com/questions/6463439/how-to-open-a-file-browse-dialog-using-javascript\n\nexport default {\n  name: 'import-invoice-dialog',\n  data: function data() {\n    return {\n      invoiceItems: [// {\n        //     item: 'Sample Item',\n        //     description: '',\n        //     quantity: 0,\n        //     price: 0,\n        // },\n      ],\n      submitting: false\n    };\n  },\n  methods: {\n    update: function update() {},\n    currency: function currency(num) {\n      return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n    },\n\n    /* Task functions */\n    addInvoiceItem: function addInvoiceItem() {\n      this.invoiceItems.push({\n        item: '',\n        description: '',\n        quantity: 0,\n        price: 0\n      });\n    },\n    deleteInvoiceItem: function deleteInvoiceItem(index) {\n      this.invoiceItems.splice(index, 1);\n    },\n    importInvoice: function importInvoice() {\n      this.$refs.invoiceFile.click();\n    },\n    importInvoiceEl: function importInvoiceEl(e) {\n      var _this = this;\n\n      var reader = new FileReader();\n      reader.readAsArrayBuffer(e.target.files[0]);\n\n      reader.onload = function (e) {\n        var data = new Uint8Array(reader.result);\n        var wb = xlsx.read(data, {\n          type: 'array'\n        });\n        var worksheet = wb.Sheets[wb.SheetNames[0]];\n        var rows = xlsx.utils.sheet_to_json(worksheet, {\n          raw: false\n        });\n        _this.invoiceItems = [];\n\n        var _iterator = _createForOfIteratorHelper(rows),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var row = _step.value;\n\n            _this.invoiceItems.push(_objectSpread({}, row, {\n              price: row.price.replace(/,/g, ''),\n              quantity: row.quantity.replace(/,/g, '')\n            }));\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      };\n    },\n    completeImport: function completeImport() {\n      this.$emit('importItems', this.invoiceItems);\n      this.invoiceItems = [];\n    },\n    cancel: function cancel() {\n      this.$emit('cancel');\n    }\n  },\n  mounted: function mounted() {\n    this.invoiceItems = [];\n  },\n  computed: {\n    invoiceTotal: function invoiceTotal() {\n      var total = 0;\n\n      var _iterator2 = _createForOfIteratorHelper(this.invoiceItems),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var item = _step2.value;\n          total += item.price * item.quantity;\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return total;\n    }\n  }\n};",{"version":3,"sources":["ImportInvoiceDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <input\n            type=\"file\"\n            class=\"hide-file-picker\"\n            id=\"input-excel\"\n            @change=\"importInvoiceEl\"\n            ref=\"invoiceFile\"\n        />\n\n        <h2 class=\"text-center\">Import Orders</h2>\n        <form @submit.prevent=\"update()\">\n            <div v-if=\"invoiceItems.length==0\" class=\"text-center empty-dialog\">\n                Import invoice from spreadsheet.\n                Download\n                <a\n                    href=\"/template.csv\"\n                    target=\"_blank\"\n                >Template</a>.\n                <br />\n                <br />\n                <base-button type=\"primary\" @click=\"importInvoice()\">{{ \"Import\" }}</base-button>\n            </div>\n            <template v-else>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <b>Item</b>\n                    </div>\n                    <div class=\"col-md-1\">\n                        <b>Qty</b>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <b>Price</b>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <b>Total</b>\n                    </div>\n                    <div class=\"col-md-1\"></div>\n                </div>\n\n                <div class=\"row invoice-item\" v-for=\"(item, index) in invoiceItems\" :key=\"index\">\n                    <div class=\"col-md-5\">\n                        <input\n                            placeholder\n                            name=\"name\"\n                            class=\"form-control\"\n                            v-model=\"invoiceItems[index].item\"\n                        />\n                    </div>\n                    <div class=\"col-md-2\">\n                        <input\n                            placeholder\n                            name=\"name\"\n                            class=\"form-control\"\n                            v-model=\"invoiceItems[index].quantity\"\n                        />\n                    </div>\n                    <div class=\"col-md-2\">\n                        <input\n                            placeholder\n                            type=\"number\"\n                            min=\"0.01\"\n                            max=\"100000\"\n                            name=\"name\"\n                            class=\"form-control\"\n                            v-model=\"invoiceItems[index].price\"\n                        />\n                    </div>\n                    <div\n                        class=\"col-md-2\"\n                    >${{currency(invoiceItems[index].price * invoiceItems[index].quantity)}}</div>\n                    <div class=\"col-md-1\">\n                        <base-button block type=\"warning\" @click=\"deleteInvoiceItem(index)\">\n                            <i class=\"ni ni-fat-remove\"></i>\n                        </base-button>\n                    </div>\n                </div>\n\n                <div v-if=\"invoiceItems.length != 0\" class=\"row invoice-total\">\n                    <div class=\"col-md-7\"></div>\n                    <div class=\"col-md-2 text-right\">\n                        <b>Total</b>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <b>${{ currency(invoiceTotal) }}</b>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-12 text-right\">\n                        <base-button type=\"warning\" @click=\"cancel()\">{{ \"Cancel\" }}</base-button>\n\n                        <base-button\n                            type=\"primary\"\n                            @click=\"completeImport()\"\n                            :disabled=\"submitting?true:false\"\n                        >{{ \"Import\" }}</base-button>\n                    </div>\n                </div>\n            </template>\n        </form>\n    </div>\n</template>\n\n<script>\nimport api from '@/api/order'\nimport xlsx from 'xlsx'\n\n//https://stackoverflow.com/questions/6463439/how-to-open-a-file-browse-dialog-using-javascript\n\nexport default {\n    name: 'import-invoice-dialog',\n    data() {\n        return {\n            invoiceItems: [\n                // {\n                //     item: 'Sample Item',\n                //     description: '',\n                //     quantity: 0,\n                //     price: 0,\n                // },\n            ],\n            submitting: false,\n        }\n    },\n    methods: {\n        update() {},\n        currency(num) {\n            return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\n        },\n        /* Task functions */\n        addInvoiceItem() {\n            this.invoiceItems.push({\n                item: '',\n                description: '',\n                quantity: 0,\n                price: 0,\n            })\n        },\n        deleteInvoiceItem(index) {\n            this.invoiceItems.splice(index, 1)\n        },\n        importInvoice() {\n            this.$refs.invoiceFile.click()\n        },\n        importInvoiceEl(e) {\n            var reader = new FileReader()\n            reader.readAsArrayBuffer(e.target.files[0])\n            reader.onload = e => {\n                const data = new Uint8Array(reader.result)\n                const wb = xlsx.read(data, { type: 'array' })\n\n                const worksheet = wb.Sheets[wb.SheetNames[0]]\n\n                const rows = xlsx.utils.sheet_to_json(worksheet, {\n                    raw: false,\n                })\n\n                this.invoiceItems = []\n\n                for (let row of rows) {\n                    this.invoiceItems.push({\n                        ...row,\n                        price: row.price.replace(/,/g, ''),\n                        quantity: row.quantity.replace(/,/g, ''),\n                    })\n                }\n            }\n        },\n        completeImport() {\n            this.$emit('importItems', this.invoiceItems)\n            this.invoiceItems = []\n        },\n        cancel() {\n            this.$emit('cancel')\n        },\n    },\n    mounted() {\n        this.invoiceItems = []\n    },\n    computed: {\n        invoiceTotal() {\n            let total = 0\n            for (let item of this.invoiceItems) {\n                total += item.price * item.quantity\n            }\n\n            return total\n        },\n    },\n}\n</script>\n<style scoped>\n.hide-file-picker {\n    position: fixed;\n    top: -1000;\n    display: none; /* probably wont work on safari*/\n}\n\n.invoice-item {\n    margin-bottom: 10px;\n}\n\n.invoice-total {\n    margin-bottom: 20px;\n}\n\n.empty-dialog {\n    padding: 3em 0 3em 0;\n}\n</style>"],"sourceRoot":"src/views/Orders"}]}