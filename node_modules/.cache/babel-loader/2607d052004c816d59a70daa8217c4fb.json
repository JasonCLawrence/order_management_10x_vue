{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js!/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jlawrence/10x/apps/OmsVue/src/views/Orders/ChangeOrdersDriver.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/views/Orders/ChangeOrdersDriver.vue","mtime":1585672524045},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport api from '@/api/order';\nimport flatPicker from 'vue-flatpickr-component';\nexport default {\n  name: 'change-orders-driver',\n  components: {\n    flatPicker: flatPicker\n  },\n  props: ['orders'],\n  data: function data() {\n    return {\n      visible: false,\n      drivers: [],\n      driverId: 0,\n      submitting: false\n    };\n  },\n  created: function created() {},\n  methods: {\n    show: function show() {\n      this.visible = true;\n      this.driverId = 0;\n    },\n    close: function close() {\n      this.visible = false;\n    },\n    cancel: function cancel() {\n      this.visible = false;\n    },\n    submit: function submit() {\n      var _this = this;\n\n      this.submitting = true;\n      this.$store.dispatch('orders/bulkSetDriver', {\n        orders: this.orders,\n        driverId: this.driverId\n      }).then(function (x) {\n        _this.$swal.fire('Success!', 'Selected orders were marked as complete', 'success');\n\n        _this.$emit('success');\n\n        _this.visible = false;\n      }).catch(function (x) {\n        _this.$swal.fire('Error!', 'There was an error marking orders as complete', 'error');\n\n        _this.$emit('error');\n\n        _this.visible = false;\n      }).finally(function (x) {\n        _this.submitting = false;\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    api.fetchDrivers().then(function (result) {\n      var drivers = result.data.success.data;\n      _this2.drivers = drivers; // if there is no assigned driver, assign the first one\n\n      if (!_this2.driverId && drivers.length > 0) _this2.driverId = drivers[0].id;\n    });\n  }\n};",{"version":3,"sources":["ChangeOrdersDriver.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,OAAA,GAAA,MAAA,aAAA;AACA,OAAA,UAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,sBADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,UAAA,EAAA;AAAA,GAFA;AAGA,EAAA,KAAA,EAAA,CAAA,QAAA,CAHA;AAIA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,CAHA;AAIA,MAAA,UAAA,EAAA;AAJA,KAAA;AAMA,GAXA;AAYA,EAAA,OAZA,qBAYA,CAAA,CAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,QAAA,GAAA,CAAA;AACA,KAJA;AAKA,IAAA,KALA,mBAKA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,KAPA;AAQA,IAAA,MARA,oBAQA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,KAVA;AAWA,IAAA,MAXA,oBAWA;AAAA;;AACA,WAAA,UAAA,GAAA,IAAA;AACA,WAAA,MAAA,CACA,QADA,CACA,sBADA,EACA;AACA,QAAA,MAAA,EAAA,KAAA,MADA;AAEA,QAAA,QAAA,EAAA,KAAA;AAFA,OADA,EAKA,IALA,CAKA,UAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,IAAA,CACA,UADA,EAEA,yCAFA,EAGA,SAHA;;AAMA,QAAA,KAAA,CAAA,KAAA,CAAA,SAAA;;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,OAdA,EAeA,KAfA,CAeA,UAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,IAAA,CACA,QADA,EAEA,+CAFA,EAGA,OAHA;;AAMA,QAAA,KAAA,CAAA,KAAA,CAAA,OAAA;;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,OAxBA,EAyBA,OAzBA,CAyBA,UAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,KAAA;AACA,OA3BA;AA4BA;AAzCA,GAbA;AAwDA,EAAA,OAxDA,qBAwDA;AAAA;;AACA,IAAA,GAAA,CAAA,YAAA,GAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,UAAA,OAAA,GAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA;AACA,MAAA,MAAA,CAAA,OAAA,GAAA,OAAA,CAFA,CAIA;;AACA,UAAA,CAAA,MAAA,CAAA,QAAA,IAAA,OAAA,CAAA,MAAA,GAAA,CAAA,EACA,MAAA,CAAA,QAAA,GAAA,OAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AACA,KAPA;AAQA;AAjEA,CAAA","sourcesContent":["<template>\n    <modal :show=\"visible\" modalClasses=\"wide-modal\" @close=\"close()\">\n        <form role=\"form\" submit.prevent=\"submit\">\n            <h2 class=\"text-center\">Set Driver</h2>\n\n            <div class=\"form-group\">\n                <label class=\"form-control-label\">Driver</label>\n                <div class=\"has-label\">\n                    <select\n                        id=\"driver\"\n                        name=\"driver\"\n                        class=\"form-control\"\n                        v-model=\"driverId\"\n                        v-validate=\"'required'\"\n                    >\n                        <option\n                            v-for=\"(driver, key) in drivers\"\n                            :value=\"driver.id\"\n                            :key=\"key\"\n                        >{{driver.first_name}} {{driver.last_name}}</option>\n                    </select>\n                </div>\n                <div\n                    class=\"text-danger invalid-feedback\"\n                    style=\"display: block;\"\n                    v-if=\"errors.has('driver')\"\n                >{{ errors.first('driver') }}</div>\n            </div>\n\n            <div class=\"text-right\">\n                <base-button\n                    class=\"my-4\"\n                    type=\"warning\"\n                    :disabled=\"submitting?true:false\"\n                    @click=\"cancel()\"\n                >Cancel</base-button>\n                <base-button\n                    class=\"my-4\"\n                    type=\"primary\"\n                    :disabled=\"submitting?true:false\"\n                    @click=\"submit()\"\n                >{{ submitting?'Submitting':'Assign' }}</base-button>\n            </div>\n        </form>\n    </modal>\n</template>\n\n<script>\nimport api from '@/api/order'\nimport flatPicker from 'vue-flatpickr-component'\n\nexport default {\n    name: 'change-orders-driver',\n    components: { flatPicker },\n    props: ['orders'],\n    data: () => {\n        return {\n            visible: false,\n            drivers: [],\n            driverId: 0,\n            submitting: false,\n        }\n    },\n    created() {},\n    methods: {\n        show() {\n            this.visible = true\n            this.driverId = 0\n        },\n        close() {\n            this.visible = false\n        },\n        cancel() {\n            this.visible = false\n        },\n        submit() {\n            this.submitting = true\n            this.$store\n                .dispatch('orders/bulkSetDriver', {\n                    orders: this.orders,\n                    driverId: this.driverId,\n                })\n                .then(x => {\n                    this.$swal.fire(\n                        'Success!',\n                        'Selected orders were marked as complete',\n                        'success'\n                    )\n\n                    this.$emit('success')\n                    this.visible = false\n                })\n                .catch(x => {\n                    this.$swal.fire(\n                        'Error!',\n                        'There was an error marking orders as complete',\n                        'error'\n                    )\n\n                    this.$emit('error')\n                    this.visible = false\n                })\n                .finally(x => {\n                    this.submitting = false\n                })\n        },\n    },\n    mounted() {\n        api.fetchDrivers().then(result => {\n            let drivers = result.data.success.data\n            this.drivers = drivers\n\n            // if there is no assigned driver, assign the first one\n            if (!this.driverId && drivers.length > 0)\n                this.driverId = drivers[0].id\n        })\n    },\n}\n</script>\n"],"sourceRoot":"src/views/Orders"}]}