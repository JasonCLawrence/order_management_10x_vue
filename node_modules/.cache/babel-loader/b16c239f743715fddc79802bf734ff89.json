{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js!/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jlawrence/10x/apps/OmsVue/src/views/ChangePassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/views/ChangePassword.vue","mtime":1585672524041},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/jlawrence/10x/apps/OmsVue/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport api from '@/api/auth';\nexport default {\n  name: 'change-password',\n  data: function data() {\n    return {\n      submitting: false,\n      signInError: false,\n      // if successfully submitted\n      submitted: false,\n      model: {\n        email: 'admin@oms.com',\n        password: 'password',\n        password_confirmation: 'password'\n      }\n    };\n  },\n  methods: {\n    submit: function submit() {\n      var _this = this;\n\n      this.$validator.validate().then(function (valid) {\n        _this.submitting = true;\n        api.resetPassword(_objectSpread({}, _this.model, {\n          token: _this.$route.query.token\n        })).then(function () {\n          // route to dashboard\n          _this.submitted = true;\n        }).catch(function (error) {\n          var messages = error.response.data.error.message; // show error\n\n          _this.signInError = true;\n\n          for (var field in messages) {\n            var _iterator = _createForOfIteratorHelper(messages[field]),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var e = _step.value;\n\n                _this.$validator.errors.add({\n                  scope: null,\n                  field: field,\n                  msg: e\n                });\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          }\n        }).finally(function () {\n          _this.submitting = false;\n        });\n      });\n    },\n    backToLogin: function backToLogin() {\n      this.$router.push('/login');\n    }\n  }\n};",{"version":3,"sources":["ChangePassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA,OAAA,GAAA,MAAA,YAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KADA;AAEA,MAAA,WAAA,EAAA,KAFA;AAGA;AACA,MAAA,SAAA,EAAA,KAJA;AAKA,MAAA,KAAA,EAAA;AACA,QAAA,KAAA,EAAA,eADA;AAEA,QAAA,QAAA,EAAA,UAFA;AAGA,QAAA,qBAAA,EAAA;AAHA;AALA,KAAA;AAWA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AACA,WAAA,UAAA,CAAA,QAAA,GAAA,IAAA,CAAA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,IAAA;AACA,QAAA,GAAA,CAAA,aAAA,mBACA,KAAA,CAAA,KADA;AAEA,UAAA,KAAA,EAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AAFA,YAIA,IAJA,CAIA,YAAA;AACA;AACA,UAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AACA,SAPA,EAQA,KARA,CAQA,UAAA,KAAA,EAAA;AACA,cAAA,QAAA,GAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CADA,CAEA;;AACA,UAAA,KAAA,CAAA,WAAA,GAAA,IAAA;;AACA,eAAA,IAAA,KAAA,IAAA,QAAA,EAAA;AAAA,uDACA,QAAA,CAAA,KAAA,CADA;AAAA;;AAAA;AACA,kEAAA;AAAA,oBAAA,CAAA;;AACA,gBAAA,KAAA,CAAA,UAAA,CAAA,MAAA,CAAA,GAAA,CAAA;AACA,kBAAA,KAAA,EAAA,IADA;AAEA,kBAAA,KAAA,EAAA,KAFA;AAGA,kBAAA,GAAA,EAAA;AAHA,iBAAA;AAKA;AAPA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA,SArBA,EAsBA,OAtBA,CAsBA,YAAA;AACA,UAAA,KAAA,CAAA,UAAA,GAAA,KAAA;AACA,SAxBA;AAyBA,OA3BA;AA4BA,KA9BA;AA+BA,IAAA,WA/BA,yBA+BA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA;AAjCA;AAfA,CAAA","sourcesContent":["<template>\n    <div class=\"main-content bg-default\" style=\"height:100vh\">\n        <div class=\"container pb-5\">\n            <div class=\"row justify-content-center\">\n                <div class=\"col-lg-5 col-md-7\">\n                    <div class=\"card bg-secondary shadow border-0 mt-9\">\n                        <div class=\"card-body px-lg-5 py-lg-1\">\n                            <template v-if=\"submitted\">\n                                <div class=\"text-center text-muted mb-4 mt-4\">\n                                    <h5 class=\"display-4\">Password Changed!</h5>\n                                </div>\n                                <div class=\"text-center text-muted mb-4 mt-4\">\n                                    We have sent a recovery email to you. Please continue the password recovery process there.\n                                    <br />\n                                    <br />\n                                    <base-button type=\"primary\" @click=\"backToLogin()\">Back To Login</base-button>\n                                </div>\n                            </template>\n                            <template v-else>\n                                <div class=\"text-center text-muted mb-4 mt-4\">\n                                    <h5 class=\"display-4\">Reset Your Password</h5>\n                                </div>\n                                <div class=\"text-center text-muted mb-4\">\n                                    <small>Reset your email address and password</small>\n                                </div>\n                                <base-alert\n                                    type=\"danger\"\n                                    v-if=\"errors.has('token')\"\n                                >{{ errors.first('token') }}</base-alert>\n                                <!-- <base-alert type=\"danger\" v-if=\"signInError\">Email Invalid</base-alert> -->\n\n                                <form role=\"form\" submit.prevent=\"login\">\n                                    <input type=\"hidden\" name=\"token\" />\n                                    <base-input\n                                        class=\"mb-3\"\n                                        label=\"Email\"\n                                        v-model=\"model.email\"\n                                        name=\"email\"\n                                        :error=\"errors.first('email')\"\n                                        v-validate=\"'required|email'\"\n                                    ></base-input>\n                                    <base-input\n                                        label=\"Password\"\n                                        type=\"password\"\n                                        v-model=\"model.password\"\n                                        name=\"password\"\n                                        :error=\"errors.first('password')\"\n                                        v-validate=\"'required|min:6'\"\n                                        ref=\"password\"\n                                    ></base-input>\n                                    <base-input\n                                        label=\"Retype Password\"\n                                        type=\"password\"\n                                        v-model=\"model.password_confirmation\"\n                                        name=\"confirmPassword\"\n                                        :error=\"errors.first('confirmPassword')\"\n                                        v-validate=\"'required|min:6|confirmed:password'\"\n                                    ></base-input>\n                                    <div class=\"text-right\">\n                                        <base-button\n                                            class=\"my-4\"\n                                            type=\"primary\"\n                                            :disabled=\"submitting?true:false\"\n                                            @click=\"submit()\"\n                                        >{{ submitting?\"Submitting...\":\"Recover Your Password\" }}</base-button>\n                                    </div>\n                                </form>\n                            </template>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport api from '@/api/auth'\n\nexport default {\n    name: 'change-password',\n    data() {\n        return {\n            submitting: false,\n            signInError: false,\n            // if successfully submitted\n            submitted: false,\n            model: {\n                email: 'admin@oms.com',\n                password: 'password',\n                password_confirmation: 'password',\n            },\n        }\n    },\n    methods: {\n        submit() {\n            this.$validator.validate().then(valid => {\n                this.submitting = true\n                api.resetPassword({\n                    ...this.model,\n                    token: this.$route.query.token,\n                })\n                    .then(() => {\n                        // route to dashboard\n                        this.submitted = true\n                    })\n                    .catch(error => {\n                        let messages = error.response.data.error.message\n                        // show error\n                        this.signInError = true\n                        for (let field in messages) {\n                            for (let e of messages[field]) {\n                                this.$validator.errors.add({\n                                    scope: null,\n                                    field: field,\n                                    msg: e,\n                                })\n                            }\n                        }\n                    })\n                    .finally(() => {\n                        this.submitting = false\n                    })\n            })\n        },\n        backToLogin() {\n            this.$router.push('/login')\n        },\n    },\n}\n</script>\n<style>\n</style>\n"],"sourceRoot":"src/views"}]}