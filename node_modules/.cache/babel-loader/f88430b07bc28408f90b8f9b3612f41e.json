{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/thread-loader/dist/cjs.js!/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js!/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jlawrence/10x/apps/OmsVue/src/views/Orders/Invoice.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/views/Orders/Invoice.vue","mtime":1585672524045},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport api from '@/api/order';\nimport { uuidv4 } from '@/utils';\nimport xlsx from 'xlsx';\nimport ImportInvoiceDialog from \"./ImportInvoiceDialog\"; //https://stackoverflow.com/questions/6463439/how-to-open-a-file-browse-dialog-using-javascript\n\nexport default {\n  name: 'invoice',\n  components: {\n    ImportInvoiceDialog: ImportInvoiceDialog\n  },\n  data: function data() {\n    return {\n      invoiceItems: [],\n      submitting: false,\n      importDailogVisible: false,\n      hash: null\n    };\n  },\n  methods: {\n    update: function update() {},\n    currency: function currency(num) {\n      return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n    },\n\n    /* Task functions */\n    addInvoiceItem: function addInvoiceItem() {\n      this.invoiceItems.push({\n        item: '',\n        hash: uuidv4(),\n        description: '',\n        quantity: 0,\n        price: 0,\n        deleted: false\n      });\n    },\n    deleteInvoiceItem: function deleteInvoiceItem(index) {\n      this.invoiceItems[index].deleted = true;\n    },\n    restoreInvoiceItem: function restoreInvoiceItem(index) {\n      this.invoiceItems[index].deleted = false;\n    },\n    downloadInvoice: function downloadInvoice() {\n      var _this = this;\n\n      this.submitting = true;\n      api.updateInvoice(this.$route.params.id, this.invoiceItems).then(function (result) {\n        var items = result.data.success.data;\n        _this.invoiceItems = items.map(function (x) {\n          x.deleted = false;\n          return x;\n        });\n\n        _this.hashItems();\n\n        api.downloadInvoice(_this.$route.params.id);\n      }).finally(function () {\n        _this.submitting = false;\n      });\n    },\n    updateInvoice: function updateInvoice() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this2.submitting = true;\n        api.updateInvoice(_this2.$route.params.id, _this2.invoiceItems).then(function (result) {\n          _this2.$swal({\n            title: 'Invoice Updated',\n            type: 'success'\n          });\n\n          var items = result.data.success.data;\n          _this2.invoiceItems = items.map(function (x) {\n            x.deleted = false;\n            return x;\n          });\n\n          _this2.hashItems();\n\n          resolve();\n        }).catch(function (error) {\n          _this2.$swal({\n            title: error.response.data.error.message,\n            type: 'error'\n          });\n\n          reject();\n        }).finally(function () {\n          _this2.submitting = false;\n        });\n      });\n    },\n    getHash: function getHash() {\n      return JSON.stringify(this.invoiceItems);\n    },\n    hashItems: function hashItems() {\n      this.hash = this.getHash();\n    },\n    hasUnsavedChanges: function hasUnsavedChanges() {\n      var newHash = this.getHash();\n      if (this.hash != newHash) return true;\n      return false;\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    api.fetchInvoice(this.$route.params.id).then(function (result) {\n      var invoiceItems = result.data.success.data;\n      _this3.invoiceItems = invoiceItems.map(function (x) {\n        x.deleted = false;\n        return x;\n      });\n\n      _this3.hashItems();\n    });\n  },\n  computed: {\n    invoiceTotal: function invoiceTotal() {\n      var total = 0;\n\n      var _iterator = _createForOfIteratorHelper(this.invoiceItems),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          if (item.deleted) continue;\n          total += item.price * item.quantity;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return total;\n    }\n  }\n};",{"version":3,"sources":["Invoice.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgIA,OAAA,GAAA,MAAA,aAAA;AACA,SAAA,MAAA,QAAA,SAAA;AACA,OAAA,IAAA,MAAA,MAAA;AACA,OAAA,mBAAA,8B,CAEA;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,mBAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA,KAFA;AAGA,MAAA,mBAAA,EAAA,KAHA;AAIA,MAAA,IAAA,EAAA;AAJA,KAAA;AAMA,GAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA,CAAA,CADA;AAEA,IAAA,QAFA,oBAEA,GAFA,EAEA;AACA,aAAA,GAAA,CAAA,OAAA,CAAA,CAAA,EAAA,OAAA,CAAA,mBAAA,EAAA,KAAA,CAAA;AACA,KAJA;;AAKA;AACA,IAAA,cANA,4BAMA;AACA,WAAA,YAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,IAAA,EAAA,MAAA,EAFA;AAGA,QAAA,WAAA,EAAA,EAHA;AAIA,QAAA,QAAA,EAAA,CAJA;AAKA,QAAA,KAAA,EAAA,CALA;AAMA,QAAA,OAAA,EAAA;AANA,OAAA;AAQA,KAfA;AAgBA,IAAA,iBAhBA,6BAgBA,KAhBA,EAgBA;AACA,WAAA,YAAA,CAAA,KAAA,EAAA,OAAA,GAAA,IAAA;AACA,KAlBA;AAmBA,IAAA,kBAnBA,8BAmBA,KAnBA,EAmBA;AACA,WAAA,YAAA,CAAA,KAAA,EAAA,OAAA,GAAA,KAAA;AACA,KArBA;AAsBA,IAAA,eAtBA,6BAsBA;AAAA;;AACA,WAAA,UAAA,GAAA,IAAA;AACA,MAAA,GAAA,CAAA,aAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,YAAA,EACA,IADA,CACA,UAAA,MAAA,EAAA;AACA,YAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA;AACA,QAAA,KAAA,CAAA,YAAA,GAAA,KAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,UAAA,CAAA,CAAA,OAAA,GAAA,KAAA;AACA,iBAAA,CAAA;AACA,SAHA,CAAA;;AAKA,QAAA,KAAA,CAAA,SAAA;;AAEA,QAAA,GAAA,CAAA,eAAA,CAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA,OAXA,EAYA,OAZA,CAYA,YAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,KAAA;AACA,OAdA;AAeA,KAvCA;AAwCA,IAAA,aAxCA,2BAwCA;AAAA;;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,QAAA,MAAA,CAAA,UAAA,GAAA,IAAA;AACA,QAAA,GAAA,CAAA,aAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA,CAAA,YAAA,EACA,IADA,CACA,UAAA,MAAA,EAAA;AACA,UAAA,MAAA,CAAA,KAAA,CAAA;AACA,YAAA,KAAA,EAAA,iBADA;AAEA,YAAA,IAAA,EAAA;AAFA,WAAA;;AAKA,cAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA;AACA,UAAA,MAAA,CAAA,YAAA,GAAA,KAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,CAAA,CAAA,OAAA,GAAA,KAAA;AACA,mBAAA,CAAA;AACA,WAHA,CAAA;;AAKA,UAAA,MAAA,CAAA,SAAA;;AACA,UAAA,OAAA;AACA,SAfA,EAgBA,KAhBA,CAgBA,UAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,KAAA,CAAA;AACA,YAAA,KAAA,EAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA,CAAA,OADA;AAEA,YAAA,IAAA,EAAA;AAFA,WAAA;;AAIA,UAAA,MAAA;AACA,SAtBA,EAuBA,OAvBA,CAuBA,YAAA;AACA,UAAA,MAAA,CAAA,UAAA,GAAA,KAAA;AACA,SAzBA;AA0BA,OA5BA,CAAA;AA6BA,KAtEA;AAuEA,IAAA,OAvEA,qBAuEA;AACA,aAAA,IAAA,CAAA,SAAA,CAAA,KAAA,YAAA,CAAA;AACA,KAzEA;AA0EA,IAAA,SA1EA,uBA0EA;AACA,WAAA,IAAA,GAAA,KAAA,OAAA,EAAA;AACA,KA5EA;AA6EA,IAAA,iBA7EA,+BA6EA;AACA,UAAA,OAAA,GAAA,KAAA,OAAA,EAAA;AACA,UAAA,KAAA,IAAA,IAAA,OAAA,EAAA,OAAA,IAAA;AACA,aAAA,KAAA;AACA;AAjFA,GAXA;AA8FA,EAAA,OA9FA,qBA8FA;AAAA;;AACA,IAAA,GAAA,CAAA,YAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,UAAA,YAAA,GAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA;AACA,MAAA,MAAA,CAAA,YAAA,GAAA,YAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,QAAA,CAAA,CAAA,OAAA,GAAA,KAAA;AACA,eAAA,CAAA;AACA,OAHA,CAAA;;AAKA,MAAA,MAAA,CAAA,SAAA;AACA,KARA;AASA,GAxGA;AAyGA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,UAAA,KAAA,GAAA,CAAA;;AADA,iDAEA,KAAA,YAFA;AAAA;;AAAA;AAEA,4DAAA;AAAA,cAAA,IAAA;AACA,cAAA,IAAA,CAAA,OAAA,EAAA;AACA,UAAA,KAAA,IAAA,IAAA,CAAA,KAAA,GAAA,IAAA,CAAA,QAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;;AAOA,aAAA,KAAA;AACA;AATA;AAzGA,CAAA","sourcesContent":["<template>\n    <div>\n        <h6 class=\"heading-small text-muted mb-4\">Invoice</h6>\n        <div\n            v-if=\"invoiceItems && invoiceItems.length == 0\"\n            class=\"text-center\"\n            style=\"margin:5em 0;\"\n        >\n            No Invoice items created as yet..\n            <br />\n            <br />\n            <base-button type=\"primary\" @click=\"addInvoiceItem()\">Add Your First Invoice Item</base-button>\n        </div>\n        <template v-else>\n            <form @submit.prevent=\"update()\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <b>Item</b>\n                    </div>\n                    <div class=\"col-md-1\">\n                        <b>Qty</b>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <b>Price</b>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <b>Total</b>\n                    </div>\n                    <div class=\"col-md-1\"></div>\n                </div>\n\n                <div class=\"row invoice-item\" v-for=\"(item, index) in invoiceItems\" :key=\"index\">\n                    <template v-if=\"invoiceItems[index].deleted == true\" class=\"text-strikethrough\">\n                        <div class=\"col-md-6 strike pad-12\">{{ invoiceItems[index].item }}</div>\n                        <div class=\"col-md-1 strike\">{{ invoiceItems[index].quantity }}</div>\n                        <div class=\"col-md-2 strike\">{{ invoiceItems[index].price }}</div>\n                        <div\n                            class=\"col-md-2 line-total strike\"\n                        >${{currency(invoiceItems[index].price * invoiceItems[index].quantity)}}</div>\n                        <div class=\"col-md-1\">\n                            <base-button block type=\"success\" @click=\"restoreInvoiceItem(index)\">\n                                <i class=\"ni ni-fat-add\"></i>\n                            </base-button>\n                        </div>\n                    </template>\n                    <template v-else>\n                        <div class=\"col-md-6\">\n                            <input\n                                placeholder\n                                name=\"name\"\n                                class=\"form-control\"\n                                v-model=\"invoiceItems[index].item\"\n                            />\n                        </div>\n                        <div class=\"col-md-1\">\n                            <input\n                                placeholder\n                                type=\"number\"\n                                name=\"name\"\n                                class=\"form-control\"\n                                v-model=\"invoiceItems[index].quantity\"\n                            />\n                        </div>\n                        <div class=\"col-md-2\">\n                            <input\n                                placeholder\n                                type=\"number\"\n                                min=\"0.01\"\n                                max=\"100000\"\n                                name=\"name\"\n                                class=\"form-control\"\n                                v-model=\"invoiceItems[index].price\"\n                            />\n                        </div>\n                        <div\n                            class=\"col-md-2 line-total\"\n                        >${{currency(invoiceItems[index].price * invoiceItems[index].quantity)}}</div>\n                        <div class=\"col-md-1\">\n                            <base-button block type=\"warning\" @click=\"deleteInvoiceItem(index)\">\n                                <i class=\"ni ni-fat-remove\"></i>\n                            </base-button>\n                        </div>\n                    </template>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <base-button\n                            size=\"sm\"\n                            type=\"primary\"\n                            @click=\"addInvoiceItem()\"\n                            :disabled=\"submitting?true:false\"\n                        >{{ \"Add Item\" }}</base-button>\n                    </div>\n                </div>\n\n                <div v-if=\"invoiceItems.length != 0\" class=\"row invoice-total\">\n                    <div class=\"col-md-8\"></div>\n                    <div class=\"col-md-1\">\n                        <b>Total</b>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <b>${{ currency(invoiceTotal) }}</b>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <base-button\n                            type=\"primary\"\n                            @click=\"downloadInvoice()\"\n                            :disabled=\"submitting?true:false\"\n                        >Download</base-button>\n                    </div>\n                    <div class=\"col-md-6 text-right\">\n                        <base-button\n                            type=\"primary\"\n                            @click=\"updateInvoice()\"\n                            :disabled=\"submitting?true:false\"\n                        >{{ submitting?\"Saving Changes...\":\"Save Changes\" }}</base-button>\n                    </div>\n                </div>\n            </form>\n        </template>\n    </div>\n</template>\n\n<script>\nimport api from '@/api/order'\nimport { uuidv4 } from '@/utils'\nimport xlsx from 'xlsx'\nimport ImportInvoiceDialog from './ImportInvoiceDialog'\n\n//https://stackoverflow.com/questions/6463439/how-to-open-a-file-browse-dialog-using-javascript\n\nexport default {\n    name: 'invoice',\n    components: { ImportInvoiceDialog },\n    data() {\n        return {\n            invoiceItems: [],\n            submitting: false,\n            importDailogVisible: false,\n            hash: null,\n        }\n    },\n    methods: {\n        update() {},\n        currency(num) {\n            return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\n        },\n        /* Task functions */\n        addInvoiceItem() {\n            this.invoiceItems.push({\n                item: '',\n                hash: uuidv4(),\n                description: '',\n                quantity: 0,\n                price: 0,\n                deleted: false,\n            })\n        },\n        deleteInvoiceItem(index) {\n            this.invoiceItems[index].deleted = true\n        },\n        restoreInvoiceItem(index) {\n            this.invoiceItems[index].deleted = false\n        },\n        downloadInvoice() {\n            this.submitting = true\n            api.updateInvoice(this.$route.params.id, this.invoiceItems)\n                .then(result => {\n                    let items = result.data.success.data\n                    this.invoiceItems = items.map(x => {\n                        x.deleted = false\n                        return x\n                    })\n\n                    this.hashItems()\n\n                    api.downloadInvoice(this.$route.params.id)\n                })\n                .finally(() => {\n                    this.submitting = false\n                })\n        },\n        updateInvoice() {\n            return new Promise((resolve, reject) => {\n                this.submitting = true\n                api.updateInvoice(this.$route.params.id, this.invoiceItems)\n                    .then(result => {\n                        this.$swal({\n                            title: 'Invoice Updated',\n                            type: 'success',\n                        })\n\n                        let items = result.data.success.data\n                        this.invoiceItems = items.map(x => {\n                            x.deleted = false\n                            return x\n                        })\n\n                        this.hashItems()\n                        resolve()\n                    })\n                    .catch(error => {\n                        this.$swal({\n                            title: error.response.data.error.message,\n                            type: 'error',\n                        })\n                        reject()\n                    })\n                    .finally(() => {\n                        this.submitting = false\n                    })\n            })\n        },\n        getHash() {\n            return JSON.stringify(this.invoiceItems)\n        },\n        hashItems() {\n            this.hash = this.getHash()\n        },\n        hasUnsavedChanges() {\n            let newHash = this.getHash()\n            if (this.hash != newHash) return true\n            return false\n        },\n    },\n    mounted() {\n        api.fetchInvoice(this.$route.params.id).then(result => {\n            let invoiceItems = result.data.success.data\n            this.invoiceItems = invoiceItems.map(x => {\n                x.deleted = false\n                return x\n            })\n\n            this.hashItems()\n        })\n    },\n    computed: {\n        invoiceTotal() {\n            let total = 0\n            for (let item of this.invoiceItems) {\n                if (item.deleted) continue\n                total += item.price * item.quantity\n            }\n\n            return total\n        },\n    },\n}\n</script>\n<style scoped>\n.hide-file-picker {\n    position: fixed;\n    top: -1000;\n}\n\n.invoice-item {\n    margin-bottom: 10px;\n}\n\n.pad-12 {\n    padding: 12px !important;\n}\n\n.invoice-total {\n    margin-bottom: 20px;\n}\n\n.line-total {\n    padding: 0.5em 0;\n}\n\n.strike {\n    text-decoration: line-through;\n    padding: 12px 27px;\n    font-weight: bold;\n    color: #fa3a0e;\n}\n</style>\n<style>\n.wide-modal {\n    max-width: 900px !important;\n}\n</style>"],"sourceRoot":"src/views/Orders"}]}