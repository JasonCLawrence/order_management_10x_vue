{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js!/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jlawrence/10x/apps/OmsVue/src/views/Users/ViewUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/views/Users/ViewUser.vue","mtime":1585672524045},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport userApi from '@/api/user';\nexport default {\n  name: 'edit-user',\n  data: function data() {\n    return {\n      model: {\n        id: 0,\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        roles: []\n      },\n      updatingBasic: false,\n      updatingEmail: false,\n      updatingPassword: false\n    };\n  },\n  methods: {\n    updateBasic: function updateBasic() {\n      var _this = this;\n\n      this.updatingBasic = true;\n      this.rolesError = null;\n      this.$validator.validate('basic.*').then(function (valid) {\n        //this.updatingBasic = true\n        if (valid) {\n          userApi.updateBasicInfo(_this.model.id, _this.model.firstName, _this.model.lastName, _this.model.roles).then(function () {\n            _this.$swal({\n              title: 'User Updated',\n              type: 'success'\n            });\n          }).catch(function (error) {\n            _this.$swal({\n              title: error.response.data.error.message,\n              type: 'error'\n            }); // this.errors.add({\n            //     field: 'roles',\n            //     msg: error.response.data.error.message,\n            //     scope: 'basic',\n            //     id: 'roles',\n            // })\n\n          }).finally(function () {\n            _this.updatingBasic = false;\n          });\n        } else {\n          _this.updatingBasic = false;\n        } // this.$store\n        //     .dispatch('user_update_basic', {\n        //         firstName: this.model.firstName,\n        //         lastName: this.model.lastName,\n        //     })\n        //     .then(() => {})\n        //     .finally(() => {\n        //         this.updatingBasic = false\n        //     })\n\n      });\n    },\n    updateEmail: function updateEmail() {\n      var _this2 = this;\n\n      this.updatingEmail = true;\n      this.$validator.validate('email.*').then(function (valid) {\n        if (valid) {\n          userApi.updateEmail(_this2.model.id, _this2.model.email).then(function (res) {\n            console.log(res);\n\n            _this2.$swal({\n              title: 'Email Updated',\n              type: 'success'\n            });\n          }).catch(function (error) {\n            _this2.errors.add({\n              field: 'email',\n              msg: error.response.data.error.message,\n              scope: 'email'\n            });\n          }).finally(function () {\n            _this2.updatingEmail = false;\n          });\n        } else {\n          _this2.updatingEmail = false;\n        } // this.$store\n        //     .dispatch('user_update_email', {\n        //         firstName: this.model.firstName,\n        //         lastName: this.model.lastName,\n        //     })\n        //     .then(() => {})\n        //     .finally(() => {\n        //         this.updatingEmail = true\n        //     })\n\n      });\n    },\n    updatePassword: function updatePassword() {\n      var _this3 = this;\n\n      this.updatingPassword = true;\n      this.$validator.validateAll('password').then(function (valid) {\n        if (valid) {\n          console.log(_this3.model);\n          userApi.updatePassword(_this3.model.id, _this3.model.password).then(function () {\n            _this3.$swal({\n              title: 'Password Updated',\n              type: 'success'\n            });\n          }).finally(function () {\n            _this3.updatingPassword = false;\n          });\n        } else {\n          _this3.updatingPassword = false;\n        } // this.$store\n        //     .dispatch('user_update_password', {\n        //         password: this.model.password,\n        //     })\n        //     .then(() => {})\n        //     .finally(() => {\n        //         this.updatingPassword = true\n        //     })\n\n      });\n    },\n    toggleRole: function toggleRole(role) {\n      var roles = this.model.roles;\n\n      if (roles.includes(role)) {\n        roles.splice(roles.indexOf(role), 1);\n      } else {\n        roles.push(role);\n      }\n\n      this.model.roles = roles;\n      console.log(roles);\n    }\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n\n    // this.$validator.extend('confirmation', {\n    //     getMessage: field => field + ' does not match',\n    //     validate: function(value, args) {\n    //         const field = document.querySelector(`${args[0]}`)\n    //         return !!(field && String(value) === field.value)\n    //     },\n    // })\n    userApi.fetchById(this.$route.params.id).then(function (result) {\n      var model = result.data.success.data;\n      model.firstName = model.first_name;\n      model.lastName = model.last_name; // fix roles\n      //console.log(model)\n\n      var roles = model.roles.map(function (r) {\n        return r.role.name;\n      });\n      model.roles = roles;\n      _this4.model = model;\n      console.log(_this4.model);\n      console.log(model.roles.includes('administrator'));\n      console.log(model.roles.includes('driver'));\n    });\n  }\n};",{"version":3,"sources":["ViewUser.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <base-header class=\"header pb-8 pt-5 pt-lg-5 d-flex\" />\n\n        <div class=\"container-fluid mt--7 pb-4\">\n            <div class=\"row\">\n                <div class=\"col-xl-8 order-xl-1\">\n                    <card shadow type=\"secondary\">\n                        <div slot=\"header\" class=\"bg-white border-0\">\n                            <div class=\"row align-items-center\">\n                                <div class=\"col-8\">\n                                    <h3 class=\"mb-0\">User</h3>\n                                </div>\n                                <div class=\"col-4 text-right\"></div>\n                            </div>\n                        </div>\n                        <template>\n                            <div class=\"pl-lg-4\">\n                                <form @submit.prevent=\"updateBasic()\" data-vv-scope=\"password\">\n                                    <div class=\"row\">\n                                        <div class=\"col-lg-12\">\n                                            <base-input\n                                                alternative\n                                                label=\"First Name\"\n                                                placeholder=\"John\"\n                                                v-model=\"model.firstName\"\n                                            />\n                                        </div>\n                                        <div class=\"col-lg-12\">\n                                            <base-input\n                                                alternative\n                                                label=\"Last Name\"\n                                                placeholder=\"Doe\"\n                                                v-model=\"model.lastName\"\n                                            />\n                                        </div>\n\n                                        <div class=\"col-lg-12\">\n                                            <div class=\"form-group has-label\">\n                                                <label class=\"form-control-label\">Roles</label>\n                                                <base-checkbox\n                                                    :checked=\"model.roles.includes('administrator')\"\n                                                    @input=\"toggleRole('administrator')\"\n                                                >Administrator</base-checkbox>\n                                                <base-checkbox\n                                                    :checked=\"model.roles.includes('driver')\"\n                                                    @input=\"toggleRole('driver')\"\n                                                >Driver</base-checkbox>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"row\">\n                                        <div class=\"col-md-12\">\n                                            <base-button\n                                                @click=\"updateBasic()\"\n                                                class=\"float-right\"\n                                                :disabled=\"updatingBasic?true:false\"\n                                            >{{ updatingBasic?\"Saving Changes...\":\"Save Changes\" }}</base-button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                            <hr class=\"my-4\" />\n                            <!-- Address -->\n                            <div class=\"pl-lg-4\">\n                                <form @submit.prevent=\"updateEmail();\" data-vv-scope=\"email\">\n                                    <div class=\"row\">\n                                        <div class=\"col-md-12\">\n                                            <base-input\n                                                alternative\n                                                label=\"Email\"\n                                                placeholder=\"username@oms.com\"\n                                                v-model=\"model.email\"\n                                                name=\"email\"\n                                                :error=\"errors.first('email.email')\"\n                                                v-validate=\"'required|email'\"\n                                            />\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-md-12\">\n                                            <base-button\n                                                @click=\"updateEmail()\"\n                                                class=\"float-right\"\n                                                :disabled=\"updatingEmail?true:false\"\n                                            >{{ updatingEmail?\"Updating Email...\":\"Update Email\" }}</base-button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                            <hr class=\"my-4\" />\n                            <div class=\"pl-lg-4\">\n                                <form @submit.prevent=\"updatePassword();\" data-vv-scope=\"password\">\n                                    <div class=\"row\">\n                                        <div class=\"col-md-12\">\n                                            <base-input\n                                                alternative\n                                                label=\"New Password\"\n                                                v-model=\"model.password\"\n                                                type=\"password\"\n                                                name=\"password\"\n                                                :error=\"errors.first('password.password')\"\n                                                v-validate=\"'required|min:6'\"\n                                                ref=\"password\"\n                                            />\n                                            <base-input\n                                                alternative\n                                                label=\"Confirm New Password\"\n                                                v-model=\"model.confirmPassword\"\n                                                type=\"password\"\n                                                name=\"confirmPassword\"\n                                                :error=\"errors.first('password.confirmPassword')\"\n                                                v-validate=\"'required|min:6|confirmed:password'\"\n                                            />\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-md-12\">\n                                            <base-button\n                                                @click=\"updatePassword()\"\n                                                class=\"float-right\"\n                                                :disabled=\"updatingPassword?true:false\"\n                                            >{{ updatingPassword?\"Changing Password...\":\"Change Password\" }}</base-button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </template>\n                    </card>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport userApi from '@/api/user'\n\nexport default {\n    name: 'edit-user',\n    data() {\n        return {\n            model: {\n                id: 0,\n                firstName: '',\n                lastName: '',\n                email: '',\n                password: '',\n                confirmPassword: '',\n                roles: [],\n            },\n            updatingBasic: false,\n            updatingEmail: false,\n            updatingPassword: false,\n        }\n    },\n    methods: {\n        updateBasic() {\n            this.updatingBasic = true\n            this.rolesError = null\n            this.$validator.validate('basic.*').then(valid => {\n                //this.updatingBasic = true\n                if (valid) {\n                    userApi\n                        .updateBasicInfo(\n                            this.model.id,\n                            this.model.firstName,\n                            this.model.lastName,\n                            this.model.roles\n                        )\n                        .then(() => {\n                            this.$swal({\n                                title: 'User Updated',\n                                type: 'success',\n                            })\n                        })\n                        .catch(error => {\n                            this.$swal({\n                                title: error.response.data.error.message,\n                                type: 'error',\n                            })\n                            // this.errors.add({\n                            //     field: 'roles',\n                            //     msg: error.response.data.error.message,\n                            //     scope: 'basic',\n                            //     id: 'roles',\n                            // })\n                        })\n                        .finally(() => {\n                            this.updatingBasic = false\n                        })\n                } else {\n                    this.updatingBasic = false\n                }\n                // this.$store\n                //     .dispatch('user_update_basic', {\n                //         firstName: this.model.firstName,\n                //         lastName: this.model.lastName,\n                //     })\n                //     .then(() => {})\n                //     .finally(() => {\n                //         this.updatingBasic = false\n                //     })\n            })\n        },\n        updateEmail() {\n            this.updatingEmail = true\n            this.$validator.validate('email.*').then(valid => {\n                if (valid) {\n                    userApi\n                        .updateEmail(this.model.id, this.model.email)\n                        .then(res => {\n                            console.log(res)\n                            this.$swal({\n                                title: 'Email Updated',\n                                type: 'success',\n                            })\n                        })\n                        .catch(error => {\n                            this.errors.add({\n                                field: 'email',\n                                msg: error.response.data.error.message,\n                                scope: 'email',\n                            })\n                        })\n                        .finally(() => {\n                            this.updatingEmail = false\n                        })\n                } else {\n                    this.updatingEmail = false\n                }\n                // this.$store\n                //     .dispatch('user_update_email', {\n                //         firstName: this.model.firstName,\n                //         lastName: this.model.lastName,\n                //     })\n                //     .then(() => {})\n                //     .finally(() => {\n                //         this.updatingEmail = true\n                //     })\n            })\n        },\n        updatePassword() {\n            this.updatingPassword = true\n            this.$validator.validateAll('password').then(valid => {\n                if (valid) {\n                    console.log(this.model)\n                    userApi\n                        .updatePassword(this.model.id, this.model.password)\n                        .then(() => {\n                            this.$swal({\n                                title: 'Password Updated',\n                                type: 'success',\n                            })\n                        })\n                        .finally(() => {\n                            this.updatingPassword = false\n                        })\n                } else {\n                    this.updatingPassword = false\n                }\n                // this.$store\n                //     .dispatch('user_update_password', {\n                //         password: this.model.password,\n                //     })\n                //     .then(() => {})\n                //     .finally(() => {\n                //         this.updatingPassword = true\n                //     })\n            })\n        },\n        toggleRole(role) {\n            let roles = this.model.roles\n            if (roles.includes(role)) {\n                roles.splice(roles.indexOf(role), 1)\n            } else {\n                roles.push(role)\n            }\n            this.model.roles = roles\n            console.log(roles)\n        },\n    },\n    mounted() {\n        // this.$validator.extend('confirmation', {\n        //     getMessage: field => field + ' does not match',\n        //     validate: function(value, args) {\n        //         const field = document.querySelector(`${args[0]}`)\n        //         return !!(field && String(value) === field.value)\n        //     },\n        // })\n\n        userApi.fetchById(this.$route.params.id).then(result => {\n            let model = result.data.success.data\n            model.firstName = model.first_name\n            model.lastName = model.last_name\n            // fix roles\n            //console.log(model)\n            let roles = model.roles.map(r => {\n                return r.role.name\n            })\n            model.roles = roles\n\n            this.model = model\n            console.log(this.model)\n            console.log(model.roles.includes('administrator'))\n            console.log(model.roles.includes('driver'))\n        })\n    },\n}\n</script>\n<style></style>\n"],"sourceRoot":"src/views/Users"}]}