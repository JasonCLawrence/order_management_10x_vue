{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jlawrence/10x/apps/OmsVue/src/components/Modal.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/components/Modal.vue","mtime":1585672524041},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.modal.show {\n    background-color: rgba(0, 0, 0, 0.3);\n}\n",{"version":3,"sources":["Modal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsJA;AACA;AACA","file":"Modal.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <SlideYUpTransition :duration=\"animationDuration\">\n        <div\n            class=\"modal fade\"\n            @mousedown.self=\"clickStart\"\n            @mouseup.self=\"clickEnd\"\n            :class=\"[{'show d-block': show}, {'d-none': !show}, {'modal-mini': type === 'mini'}]\"\n            v-show=\"show\"\n            tabindex=\"-1\"\n            role=\"dialog\"\n            :aria-hidden=\"!show\"\n        >\n            <div\n                @mouseenter.self=\"mouseEnter\"\n                @mouseleave.self=\"mouseLeave\"\n                class=\"modal-dialog\"\n                :class=\"[{'modal-notice': type === 'notice'}, {'modal-dialog-centered':centered}, modalClasses]\"\n            >\n                <div\n                    class=\"modal-content\"\n                    :class=\"[gradient ? `bg-gradient-${gradient}` : '',modalContentClasses]\"\n                >\n                    <div class=\"modal-header\" :class=\"[headerClasses]\" v-if=\"$slots.header\">\n                        <slot name=\"header\"></slot>\n                        <slot name=\"close-button\">\n                            <button\n                                type=\"button\"\n                                class=\"close\"\n                                v-if=\"showClose\"\n                                @click=\"closeModal\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                            >\n                                <span :aria-hidden=\"!show\">Ã—</span>\n                            </button>\n                        </slot>\n                    </div>\n\n                    <div class=\"modal-body\" :class=\"bodyClasses\">\n                        <slot></slot>\n                    </div>\n\n                    <div class=\"modal-footer\" :class=\"footerClasses\" v-if=\"$slots.footer\">\n                        <slot name=\"footer\"></slot>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </SlideYUpTransition>\n</template>\n<script>\nimport { SlideYUpTransition } from 'vue2-transitions'\n\nexport default {\n    name: 'modal',\n    components: {\n        SlideYUpTransition,\n    },\n    props: {\n        show: Boolean,\n        showClose: {\n            type: Boolean,\n            default: true,\n        },\n        type: {\n            type: String,\n            default: '',\n            validator(value) {\n                let acceptedValues = ['', 'notice', 'mini']\n                return acceptedValues.indexOf(value) !== -1\n            },\n            description: 'Modal type (notice|mini|\"\") ',\n        },\n        modalClasses: {\n            type: [Object, String],\n            description: 'Modal dialog css classes',\n        },\n        modalContentClasses: {\n            type: [Object, String],\n            description: 'Modal dialog content css classes',\n        },\n        gradient: {\n            type: String,\n            description: 'Modal gradient type (danger, primary etc)',\n        },\n        headerClasses: {\n            type: [Object, String],\n            description: 'Modal Header css classes',\n        },\n        bodyClasses: {\n            type: [Object, String],\n            description: 'Modal Body css classes',\n        },\n        footerClasses: {\n            type: [Object, String],\n            description: 'Modal Footer css classes',\n        },\n        animationDuration: {\n            type: Number,\n            default: 500,\n            description: 'Modal transition duration',\n        },\n        centered: {\n            type: Boolean,\n            default: false,\n            description: 'Center dialog vertically and horizontally',\n        },\n    },\n    data() {\n        return {\n            clickStarted: false,\n            mouseInsideModal: false,\n        }\n    },\n    methods: {\n        closeModal() {\n            this.$emit('update:show', false)\n            this.$emit('close')\n        },\n        clickStart() {\n            this.clickStarted = true\n        },\n        clickEnd() {\n            if (this.clickStarted == true && this.mouseInsideModal == false) {\n                this.closeModal()\n            }\n\n            this.clickStarted = false\n        },\n        mouseEnter() {\n            this.clickStarted = false\n            this.mouseInsideModal = true\n        },\n        mouseLeave() {\n            this.mouseInsideModal = false\n        },\n    },\n    watch: {\n        show(val) {\n            let documentClasses = document.body.classList\n            if (val) {\n                documentClasses.add('modal-open')\n            } else {\n                documentClasses.remove('modal-open')\n            }\n        },\n    },\n}\n</script>\n<style>\n.modal.show {\n    background-color: rgba(0, 0, 0, 0.3);\n}\n</style>\n"]}]}