{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jlawrence/10x/apps/OmsVue/src/views/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/views/Dashboard.vue","mtime":1585672524041},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// Charts\nimport * as chartConfigs from '@/components/Charts/config'\nimport LineChart from '@/components/Charts/LineChart'\nimport BarChart from '@/components/Charts/BarChart'\nimport api from '@/api/dashboard'\n\n// Tables\nimport SocialTrafficTable from './Dashboard/SocialTrafficTable'\nimport RecentOrdersTable from './Dashboard/RecentOrdersTable'\n\n// Map\nimport DashboardMap from './Dashboard/DashboardMap'\n\nexport default {\n    components: {\n        LineChart,\n        BarChart,\n        RecentOrdersTable,\n        SocialTrafficTable,\n        DashboardMap,\n    },\n    data() {\n        return {\n            recentOrders: [],\n            timeSeries: [],\n            users: '0',\n            orders: '0',\n            warehouses: '0',\n            customers: '0',\n            fleet: '0',\n            chartData: {\n                labels: ['Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n                datasets: [\n                    {\n                        label: 'Orders',\n                        // data: [25, 20, 30, 22, 17, 29],\n                    },\n                ],\n            },\n\n            // map data\n            zoom: 13,\n            url: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png',\n            attribution:\n                '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n            popupData: \"Hello I'm a Popup\",\n        }\n    },\n    methods: {\n        setChartData(timeSeries) {\n            //\n            let shortMonths = [\n                'Jan',\n                'Feb',\n                'Mar',\n                'Apr',\n                'May',\n                'Jun',\n                'Jul',\n                'Aug',\n                'Sep',\n                'Oct',\n                'Nov',\n                'Dec',\n            ]\n            let labels = []\n            let dataSet = []\n            for (let entry of timeSeries) {\n                labels.push(shortMonths[entry.month - 1])\n                dataSet.push(entry.count)\n            }\n\n            // add extra empty months to fill the chart\n            let lastEntryMonth = 0\n            if (timeSeries.length > 0)\n                lastEntryMonth = timeSeries[timeSeries.length - 1].month\n\n            while (dataSet.length < 8) {\n                lastEntryMonth = (lastEntryMonth + 1) % 12\n                labels.push(shortMonths[lastEntryMonth])\n                dataSet.push(0)\n            }\n\n            // set data\n            this.chartData.labels = labels\n            this.chartData.datasets[0].data = dataSet\n\n            this.$refs.barChart.renderChart(this.chartData, null)\n        },\n    },\n    mounted() {\n        api.fetch().then(res => {\n            const data = res.data.success.data\n\n            // basics\n            this.users = data.users.toString()\n            this.fleet = data.fleet.toString()\n            this.customers = data.customers.toString()\n            this.warehouses = data.warehouses.toString()\n\n            // chart\n            this.timeSeries = data.time_series_orders\n            this.setChartData(this.timeSeries)\n\n            // calculate\n\n            // orders\n            let orders = data.most_recent_orders\n            orders = orders.map(o => {\n                // calculate task completion\n                o.totalTasks = o.checklist.length\n                o.completedTasks = o.checklist.filter(x => {\n                    return x.checked == 1\n                }).length\n\n                if (o.totalTasks != 0)\n                    o.taskCompletion = (o.completedTasks / o.totalTasks) * 100\n                else o.taskCompletion = 0\n\n                return o\n            })\n\n            this.recentOrders = orders\n        })\n    },\n}\n",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"mt--1 pb-4\">\n        <base-header class=\"pb-6 pb-8 pt-5 pt-md-8\">\n            <!-- Card stats -->\n            <div class=\"row\">\n                <div class=\"col-xl-3 col-lg-6\">\n                    <router-link to=\"/users\">\n                        <stats-card\n                            title=\"Users\"\n                            type=\"gradient-red\"\n                            :sub-title=\"users\"\n                            icon=\"ni ni-circle-08\"\n                            class=\"mb-4 mb-xl-0\"\n                        ></stats-card>\n                    </router-link>\n                </div>\n                <div class=\"col-xl-3 col-lg-6\">\n                    <router-link to=\"/fleet\">\n                        <stats-card\n                            title=\"Fleet\"\n                            type=\"gradient-orange\"\n                            :sub-title=\"fleet\"\n                            icon=\"ni ni-delivery-fast\"\n                            class=\"mb-4 mb-xl-0\"\n                        ></stats-card>\n                    </router-link>\n                </div>\n                <div class=\"col-xl-3 col-lg-6\">\n                    <router-link to=\"/customers\">\n                        <stats-card\n                            title=\"Customers\"\n                            type=\"gradient-green\"\n                            :sub-title=\"customers\"\n                            icon=\"ni ni-shop\"\n                            class=\"mb-4 mb-xl-0\"\n                        ></stats-card>\n                    </router-link>\n                </div>\n                <div class=\"col-xl-3 col-lg-6\">\n                    <router-link to=\"/warehouses\">\n                        <stats-card\n                            title=\"Warehouses\"\n                            type=\"gradient-info\"\n                            :sub-title=\"warehouses\"\n                            icon=\"ni ni-shop\"\n                            class=\"mb-4 mb-xl-0\"\n                        ></stats-card>\n                    </router-link>\n                </div>\n            </div>\n        </base-header>\n\n        <!--Charts-->\n        <div class=\"container-fluid mt--7\">\n            <div class=\"row\">\n                <div class=\"col-md-7 mb-5 mb-xl-0\">\n                    <card type=\"default\" header-classes=\"bg-transparent\">\n                        <div slot=\"header\" class=\"row align-items-center\">\n                            <div class=\"col\">\n                                <h6 class=\"text-uppercase text-muted ls-1 mb-1\">Performance</h6>\n                                <h5 class=\"h3 mb-0\">Total Orders</h5>\n                            </div>\n                        </div>\n\n                        <bar-chart :height=\"350\" ref=\"barChart\" :chart-data=\"chartData\"></bar-chart>\n                    </card>\n                </div>\n\n                <div class=\"col-md-5 mb-5 mb-xl-0\">\n                    <div class=\"card\">\n                        <div class=\"card-header border-0\">\n                            <div class=\"row align-items-center\">\n                                <div class=\"col\">\n                                    <h3 class=\"mb-0\">Drivers Last Locations</h3>\n                                </div>\n                            </div>\n                        </div>\n                        <dashboard-map />\n                    </div>\n                </div>\n            </div>\n\n            <!-- Driver Map -->\n            <!-- <div class=\"row\">\n                <div class=\"col-xl-12 mb-5 mb-xl-0 mt-5\">\n                    <div class=\"card\">\n                        <div class=\"card-header border-0\">\n                            <div class=\"row align-items-center\">\n                                <div class=\"col\">\n                                    <h3 class=\"mb-0\">Drivers</h3>\n                                </div>\n                            </div>\n                        </div>\n                        <dashboard-map />\n                    </div>\n                </div>\n            </div>-->\n\n            <!--Tables-->\n            <div class=\"row mt-5\">\n                <div class=\"col-xl-12 mb-5 mb-xl-0\">\n                    <recent-orders-table :orders=\"recentOrders\" />\n                </div>\n            </div>\n            <!--End tables-->\n        </div>\n    </div>\n</template>\n<script>\n// Charts\nimport * as chartConfigs from '@/components/Charts/config'\nimport LineChart from '@/components/Charts/LineChart'\nimport BarChart from '@/components/Charts/BarChart'\nimport api from '@/api/dashboard'\n\n// Tables\nimport SocialTrafficTable from './Dashboard/SocialTrafficTable'\nimport RecentOrdersTable from './Dashboard/RecentOrdersTable'\n\n// Map\nimport DashboardMap from './Dashboard/DashboardMap'\n\nexport default {\n    components: {\n        LineChart,\n        BarChart,\n        RecentOrdersTable,\n        SocialTrafficTable,\n        DashboardMap,\n    },\n    data() {\n        return {\n            recentOrders: [],\n            timeSeries: [],\n            users: '0',\n            orders: '0',\n            warehouses: '0',\n            customers: '0',\n            fleet: '0',\n            chartData: {\n                labels: ['Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n                datasets: [\n                    {\n                        label: 'Orders',\n                        // data: [25, 20, 30, 22, 17, 29],\n                    },\n                ],\n            },\n\n            // map data\n            zoom: 13,\n            url: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png',\n            attribution:\n                '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n            popupData: \"Hello I'm a Popup\",\n        }\n    },\n    methods: {\n        setChartData(timeSeries) {\n            //\n            let shortMonths = [\n                'Jan',\n                'Feb',\n                'Mar',\n                'Apr',\n                'May',\n                'Jun',\n                'Jul',\n                'Aug',\n                'Sep',\n                'Oct',\n                'Nov',\n                'Dec',\n            ]\n            let labels = []\n            let dataSet = []\n            for (let entry of timeSeries) {\n                labels.push(shortMonths[entry.month - 1])\n                dataSet.push(entry.count)\n            }\n\n            // add extra empty months to fill the chart\n            let lastEntryMonth = 0\n            if (timeSeries.length > 0)\n                lastEntryMonth = timeSeries[timeSeries.length - 1].month\n\n            while (dataSet.length < 8) {\n                lastEntryMonth = (lastEntryMonth + 1) % 12\n                labels.push(shortMonths[lastEntryMonth])\n                dataSet.push(0)\n            }\n\n            // set data\n            this.chartData.labels = labels\n            this.chartData.datasets[0].data = dataSet\n\n            this.$refs.barChart.renderChart(this.chartData, null)\n        },\n    },\n    mounted() {\n        api.fetch().then(res => {\n            const data = res.data.success.data\n\n            // basics\n            this.users = data.users.toString()\n            this.fleet = data.fleet.toString()\n            this.customers = data.customers.toString()\n            this.warehouses = data.warehouses.toString()\n\n            // chart\n            this.timeSeries = data.time_series_orders\n            this.setChartData(this.timeSeries)\n\n            // calculate\n\n            // orders\n            let orders = data.most_recent_orders\n            orders = orders.map(o => {\n                // calculate task completion\n                o.totalTasks = o.checklist.length\n                o.completedTasks = o.checklist.filter(x => {\n                    return x.checked == 1\n                }).length\n\n                if (o.totalTasks != 0)\n                    o.taskCompletion = (o.completedTasks / o.totalTasks) * 100\n                else o.taskCompletion = 0\n\n                return o\n            })\n\n            this.recentOrders = orders\n        })\n    },\n}\n</script>\n<style></style>\n"]}]}