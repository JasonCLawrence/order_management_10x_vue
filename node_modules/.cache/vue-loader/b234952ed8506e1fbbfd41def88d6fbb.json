{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jlawrence/10x/apps/OmsVue/src/views/Reports/ReportsTable.vue?vue&type=template&id=2ee3b379&","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/views/Reports/ReportsTable.vue","mtime":1585672524045},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"card shadow\",\n      class: _vm.type === \"dark\" ? \"bg-default\" : \"\"\n    },\n    [\n      _c(\"export-details-dialog\", {\n        ref: \"detailsDialog\",\n        on: {\n          download: function($event) {\n            return _vm.exportReportDetails()\n          }\n        }\n      }),\n      _c(\n        \"div\",\n        {\n          staticClass: \"card-header border-0\",\n          class: _vm.type === \"dark\" ? \"bg-transparent\" : \"\"\n        },\n        [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-md-2\" }, [\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\"label\", { staticClass: \"form-control-label\" }, [\n                  _vm._v(\"Customer\")\n                ]),\n                _c(\"div\", { staticClass: \"has-label\" }, [\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.model.customer_id,\n                          expression: \"model.customer_id\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      on: {\n                        change: function($event) {\n                          var $$selectedVal = Array.prototype.filter\n                            .call($event.target.options, function(o) {\n                              return o.selected\n                            })\n                            .map(function(o) {\n                              var val = \"_value\" in o ? o._value : o.value\n                              return val\n                            })\n                          _vm.$set(\n                            _vm.model,\n                            \"customer_id\",\n                            $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          )\n                        }\n                      }\n                    },\n                    [\n                      _c(\"option\", { attrs: { value: \"0\", default: \"\" } }, [\n                        _vm._v(\"Any\")\n                      ]),\n                      _vm._l(_vm.customers, function(el, key) {\n                        return _c(\n                          \"option\",\n                          { key: key, domProps: { value: el.id } },\n                          [_vm._v(_vm._s(el.name))]\n                        )\n                      })\n                    ],\n                    2\n                  )\n                ])\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"col-md-2\" }, [\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\"label\", { staticClass: \"form-control-label\" }, [\n                  _vm._v(\"Warehouse\")\n                ]),\n                _c(\"div\", { staticClass: \"has-label\" }, [\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.model.warehouse_id,\n                          expression: \"model.warehouse_id\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      on: {\n                        change: function($event) {\n                          var $$selectedVal = Array.prototype.filter\n                            .call($event.target.options, function(o) {\n                              return o.selected\n                            })\n                            .map(function(o) {\n                              var val = \"_value\" in o ? o._value : o.value\n                              return val\n                            })\n                          _vm.$set(\n                            _vm.model,\n                            \"warehouse_id\",\n                            $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          )\n                        }\n                      }\n                    },\n                    [\n                      _c(\"option\", { domProps: { value: 0 } }, [_vm._v(\"Any\")]),\n                      _vm._l(_vm.warehouses, function(el, key) {\n                        return _c(\n                          \"option\",\n                          { key: key, domProps: { value: el.id } },\n                          [_vm._v(_vm._s(el.name))]\n                        )\n                      })\n                    ],\n                    2\n                  )\n                ])\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"col-md-2\" }, [\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\"label\", { staticClass: \"form-control-label\" }, [\n                  _vm._v(\"Driver\")\n                ]),\n                _c(\"div\", { staticClass: \"has-label\" }, [\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.model.driver_id,\n                          expression: \"model.driver_id\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      on: {\n                        change: function($event) {\n                          var $$selectedVal = Array.prototype.filter\n                            .call($event.target.options, function(o) {\n                              return o.selected\n                            })\n                            .map(function(o) {\n                              var val = \"_value\" in o ? o._value : o.value\n                              return val\n                            })\n                          _vm.$set(\n                            _vm.model,\n                            \"driver_id\",\n                            $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          )\n                        }\n                      }\n                    },\n                    [\n                      _c(\"option\", { domProps: { value: 0 } }, [_vm._v(\"Any\")]),\n                      _c(\"option\", { domProps: { value: -1 } }, [\n                        _vm._v(\"Assigned\")\n                      ]),\n                      _c(\"option\", { domProps: { value: -2 } }, [\n                        _vm._v(\"Unassigned\")\n                      ]),\n                      _vm._l(_vm.drivers, function(driver, key) {\n                        return _c(\n                          \"option\",\n                          { key: key, domProps: { value: driver.id } },\n                          [\n                            _vm._v(\n                              _vm._s(driver.first_name) +\n                                \" \" +\n                                _vm._s(driver.last_name)\n                            )\n                          ]\n                        )\n                      })\n                    ],\n                    2\n                  )\n                ])\n              ])\n            ]),\n            _c(\n              \"div\",\n              { staticClass: \"col-md-2\" },\n              [\n                _c(\"base-input\", {\n                  attrs: { label: \"Start Date\" },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(ref) {\n                        var focus = ref.focus\n                        var blur = ref.blur\n                        return _c(\"flat-picker\", {\n                          staticClass: \"form-control datepicker\",\n                          attrs: { config: { allowInput: true } },\n                          on: { \"on-open\": focus, \"on-close\": blur },\n                          model: {\n                            value: _vm.model.created_start,\n                            callback: function($$v) {\n                              _vm.$set(_vm.model, \"created_start\", $$v)\n                            },\n                            expression: \"model.created_start\"\n                          }\n                        })\n                      }\n                    }\n                  ])\n                })\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              { staticClass: \"col-md-2\" },\n              [\n                _c(\"base-input\", {\n                  attrs: { label: \"End Date\" },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(ref) {\n                        var focus = ref.focus\n                        var blur = ref.blur\n                        return _c(\"flat-picker\", {\n                          staticClass: \"form-control datepicker\",\n                          attrs: { config: { allowInput: true } },\n                          on: { \"on-open\": focus, \"on-close\": blur },\n                          model: {\n                            value: _vm.model.created_end,\n                            callback: function($$v) {\n                              _vm.$set(_vm.model, \"created_end\", $$v)\n                            },\n                            expression: \"model.created_end\"\n                          }\n                        })\n                      }\n                    }\n                  ])\n                })\n              ],\n              1\n            ),\n            _c(\"div\", { staticClass: \"col-md-1\" }, [\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\"label\", { staticClass: \"form-control-label\" }, [\n                  _vm._v(\"Type\")\n                ]),\n                _c(\"div\", { staticClass: \"has-label\" }, [\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.model.type,\n                          expression: \"model.type\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: { id: \"make\", name: \"type\" },\n                      on: {\n                        change: function($event) {\n                          var $$selectedVal = Array.prototype.filter\n                            .call($event.target.options, function(o) {\n                              return o.selected\n                            })\n                            .map(function(o) {\n                              var val = \"_value\" in o ? o._value : o.value\n                              return val\n                            })\n                          _vm.$set(\n                            _vm.model,\n                            \"type\",\n                            $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          )\n                        }\n                      }\n                    },\n                    [\n                      _c(\"option\", { attrs: { value: \"any\" } }, [\n                        _vm._v(\"All\")\n                      ]),\n                      _c(\"option\", { attrs: { value: \"service\" } }, [\n                        _vm._v(\"Service\")\n                      ]),\n                      _c(\"option\", { attrs: { value: \"invoice\" } }, [\n                        _vm._v(\"Invoice\")\n                      ])\n                    ]\n                  )\n                ])\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"col-md-1\" }, [\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\"label\", { staticClass: \"form-control-label\" }, [\n                  _vm._v(\"Completed\")\n                ]),\n                _c(\"div\", { staticClass: \"has-label\" }, [\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.model.completed,\n                          expression: \"model.completed\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: { id: \"completed\", name: \"type\" },\n                      on: {\n                        change: function($event) {\n                          var $$selectedVal = Array.prototype.filter\n                            .call($event.target.options, function(o) {\n                              return o.selected\n                            })\n                            .map(function(o) {\n                              var val = \"_value\" in o ? o._value : o.value\n                              return val\n                            })\n                          _vm.$set(\n                            _vm.model,\n                            \"completed\",\n                            $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          )\n                        }\n                      }\n                    },\n                    [\n                      _c(\"option\", { attrs: { value: \"any\" } }, [\n                        _vm._v(\"Any\")\n                      ]),\n                      _c(\"option\", { attrs: { value: \"yes\" } }, [\n                        _vm._v(\"Yes\")\n                      ]),\n                      _c(\"option\", { attrs: { value: \"no\" } }, [_vm._v(\"No\")])\n                    ]\n                  )\n                ])\n              ])\n            ])\n          ]),\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-md-8\" }),\n            _c(\n              \"div\",\n              {\n                staticClass: \"col-md-4\",\n                staticStyle: { \"text-align\": \"right\" }\n              },\n              [\n                _c(\n                  \"base-button\",\n                  {\n                    attrs: { type: \"primary\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.exportReport()\n                      }\n                    }\n                  },\n                  [_vm._v(\"Export Header\")]\n                ),\n                _c(\n                  \"base-button\",\n                  {\n                    attrs: { type: \"primary\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.showDetailsDialog()\n                      }\n                    }\n                  },\n                  [_vm._v(\"Export Details\")]\n                )\n              ],\n              1\n            )\n          ])\n        ]\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"table-responsive\" },\n        [\n          _c(\n            \"base-table\",\n            {\n              staticClass: \"table align-items-center table-flush\",\n              class: _vm.type === \"dark\" ? \"table-dark\" : \"\",\n              attrs: {\n                \"thead-classes\":\n                  _vm.type === \"dark\" ? \"thead-dark\" : \"thead-light\",\n                \"tbody-classes\": \"list\",\n                data: _vm.report\n              },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(ref) {\n                    var row = ref.row\n                    return [\n                      _c(\"th\", { attrs: { scope: \"row\" } }, [\n                        _c(\"div\", {}, [\n                          _c(\"span\", { staticClass: \"name mb-0 text-sm\" }, [\n                            _vm._v(_vm._s(row.customer))\n                          ])\n                        ])\n                      ]),\n                      _c(\"td\", [_c(\"span\", [_vm._v(_vm._s(row.driver))])]),\n                      _c(\"td\", [_c(\"span\", [_vm._v(_vm._s(row.warehouse))])]),\n                      _c(\"td\", [_c(\"span\", [_vm._v(_vm._s(row.type))])]),\n                      _c(\"td\", [_c(\"span\", [_vm._v(_vm._s(row.completed))])]),\n                      _c(\"td\", [_c(\"span\", [_vm._v(_vm._s(row.created_by))])]),\n                      _c(\"td\", [_c(\"span\", [_vm._v(_vm._s(row.created_at))])])\n                    ]\n                  }\n                }\n              ])\n            },\n            [\n              _c(\"template\", { slot: \"columns\" }, [\n                _c(\"th\", [_vm._v(\"Customer\")]),\n                _c(\"th\", [_vm._v(\"Driver\")]),\n                _c(\"th\", [_vm._v(\"Warehouse\")]),\n                _c(\"th\", [_vm._v(\"Type\")]),\n                _c(\"th\", [_vm._v(\"Completed\")]),\n                _c(\"th\", [_vm._v(\"Created By\")]),\n                _c(\"th\", [_vm._v(\"Created At\")])\n              ])\n            ],\n            2\n          )\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        {\n          staticClass: \"card-footer d-flex justify-content-end\",\n          class: _vm.type === \"dark\" ? \"bg-transparent\" : \"\"\n        },\n        [\n          _vm.pagination != null\n            ? _c(\"base-pagination\", {\n                attrs: {\n                  perPage: _vm.pagination.pageSize,\n                  value: _vm.pagination.page,\n                  total: _vm.pagination.total\n                }\n              })\n            : _vm._e()\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}