{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jlawrence/10x/apps/OmsVue/src/views/Orders/ImportInvoiceDialog.vue?vue&type=style&index=0&id=7afa58c0&scoped=true&lang=css&","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/views/Orders/ImportInvoiceDialog.vue","mtime":1585672524045},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.hide-file-picker {\n    position: fixed;\n    top: -1000;\n    display: none; /* probably wont work on safari*/\n}\n\n.invoice-item {\n    margin-bottom: 10px;\n}\n\n.invoice-total {\n    margin-bottom: 20px;\n}\n\n.empty-dialog {\n    padding: 3em 0 3em 0;\n}\n",{"version":3,"sources":["ImportInvoiceDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiMA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"ImportInvoiceDialog.vue","sourceRoot":"src/views/Orders","sourcesContent":["<template>\n    <div>\n        <input\n            type=\"file\"\n            class=\"hide-file-picker\"\n            id=\"input-excel\"\n            @change=\"importInvoiceEl\"\n            ref=\"invoiceFile\"\n        />\n\n        <h2 class=\"text-center\">Import Orders</h2>\n        <form @submit.prevent=\"update()\">\n            <div v-if=\"invoiceItems.length==0\" class=\"text-center empty-dialog\">\n                Import invoice from spreadsheet.\n                Download\n                <a\n                    href=\"/template.csv\"\n                    target=\"_blank\"\n                >Template</a>.\n                <br />\n                <br />\n                <base-button type=\"primary\" @click=\"importInvoice()\">{{ \"Import\" }}</base-button>\n            </div>\n            <template v-else>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <b>Item</b>\n                    </div>\n                    <div class=\"col-md-1\">\n                        <b>Qty</b>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <b>Price</b>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <b>Total</b>\n                    </div>\n                    <div class=\"col-md-1\"></div>\n                </div>\n\n                <div class=\"row invoice-item\" v-for=\"(item, index) in invoiceItems\" :key=\"index\">\n                    <div class=\"col-md-5\">\n                        <input\n                            placeholder\n                            name=\"name\"\n                            class=\"form-control\"\n                            v-model=\"invoiceItems[index].item\"\n                        />\n                    </div>\n                    <div class=\"col-md-2\">\n                        <input\n                            placeholder\n                            name=\"name\"\n                            class=\"form-control\"\n                            v-model=\"invoiceItems[index].quantity\"\n                        />\n                    </div>\n                    <div class=\"col-md-2\">\n                        <input\n                            placeholder\n                            type=\"number\"\n                            min=\"0.01\"\n                            max=\"100000\"\n                            name=\"name\"\n                            class=\"form-control\"\n                            v-model=\"invoiceItems[index].price\"\n                        />\n                    </div>\n                    <div\n                        class=\"col-md-2\"\n                    >${{currency(invoiceItems[index].price * invoiceItems[index].quantity)}}</div>\n                    <div class=\"col-md-1\">\n                        <base-button block type=\"warning\" @click=\"deleteInvoiceItem(index)\">\n                            <i class=\"ni ni-fat-remove\"></i>\n                        </base-button>\n                    </div>\n                </div>\n\n                <div v-if=\"invoiceItems.length != 0\" class=\"row invoice-total\">\n                    <div class=\"col-md-7\"></div>\n                    <div class=\"col-md-2 text-right\">\n                        <b>Total</b>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <b>${{ currency(invoiceTotal) }}</b>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-12 text-right\">\n                        <base-button type=\"warning\" @click=\"cancel()\">{{ \"Cancel\" }}</base-button>\n\n                        <base-button\n                            type=\"primary\"\n                            @click=\"completeImport()\"\n                            :disabled=\"submitting?true:false\"\n                        >{{ \"Import\" }}</base-button>\n                    </div>\n                </div>\n            </template>\n        </form>\n    </div>\n</template>\n\n<script>\nimport api from '@/api/order'\nimport xlsx from 'xlsx'\n\n//https://stackoverflow.com/questions/6463439/how-to-open-a-file-browse-dialog-using-javascript\n\nexport default {\n    name: 'import-invoice-dialog',\n    data() {\n        return {\n            invoiceItems: [\n                // {\n                //     item: 'Sample Item',\n                //     description: '',\n                //     quantity: 0,\n                //     price: 0,\n                // },\n            ],\n            submitting: false,\n        }\n    },\n    methods: {\n        update() {},\n        currency(num) {\n            return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\n        },\n        /* Task functions */\n        addInvoiceItem() {\n            this.invoiceItems.push({\n                item: '',\n                description: '',\n                quantity: 0,\n                price: 0,\n            })\n        },\n        deleteInvoiceItem(index) {\n            this.invoiceItems.splice(index, 1)\n        },\n        importInvoice() {\n            this.$refs.invoiceFile.click()\n        },\n        importInvoiceEl(e) {\n            var reader = new FileReader()\n            reader.readAsArrayBuffer(e.target.files[0])\n            reader.onload = e => {\n                const data = new Uint8Array(reader.result)\n                const wb = xlsx.read(data, { type: 'array' })\n\n                const worksheet = wb.Sheets[wb.SheetNames[0]]\n\n                const rows = xlsx.utils.sheet_to_json(worksheet, {\n                    raw: false,\n                })\n\n                this.invoiceItems = []\n\n                for (let row of rows) {\n                    this.invoiceItems.push({\n                        ...row,\n                        price: row.price.replace(/,/g, ''),\n                        quantity: row.quantity.replace(/,/g, ''),\n                    })\n                }\n            }\n        },\n        completeImport() {\n            this.$emit('importItems', this.invoiceItems)\n            this.invoiceItems = []\n        },\n        cancel() {\n            this.$emit('cancel')\n        },\n    },\n    mounted() {\n        this.invoiceItems = []\n    },\n    computed: {\n        invoiceTotal() {\n            let total = 0\n            for (let item of this.invoiceItems) {\n                total += item.price * item.quantity\n            }\n\n            return total\n        },\n    },\n}\n</script>\n<style scoped>\n.hide-file-picker {\n    position: fixed;\n    top: -1000;\n    display: none; /* probably wont work on safari*/\n}\n\n.invoice-item {\n    margin-bottom: 10px;\n}\n\n.invoice-total {\n    margin-bottom: 20px;\n}\n\n.empty-dialog {\n    padding: 3em 0 3em 0;\n}\n</style>"]}]}