{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jlawrence/10x/apps/OmsVue/src/views/Orders/CreateOrderForm.vue?vue&type=template&id=1d2c8106&","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/views/Orders/CreateOrderForm.vue","mtime":1585672524045},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"form\",\n    { attrs: { role: \"form\", \"submit.prevent\": \"login\" } },\n    [\n      _c(\"h2\", { staticClass: \"text-center\" }, [_vm._v(\"Create Order\")]),\n      _c(\"div\", { staticClass: \"form-group\" }, [\n        _c(\"label\", { staticClass: \"form-control-label\" }, [_vm._v(\"Type\")]),\n        _c(\"div\", { staticClass: \"has-label\" }, [\n          _c(\n            \"select\",\n            {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.model.type,\n                  expression: \"model.type\"\n                }\n              ],\n              staticClass: \"form-control\",\n              attrs: { id: \"make\", name: \"type\" },\n              on: {\n                change: function($event) {\n                  var $$selectedVal = Array.prototype.filter\n                    .call($event.target.options, function(o) {\n                      return o.selected\n                    })\n                    .map(function(o) {\n                      var val = \"_value\" in o ? o._value : o.value\n                      return val\n                    })\n                  _vm.$set(\n                    _vm.model,\n                    \"type\",\n                    $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n                  )\n                }\n              }\n            },\n            [\n              _c(\"option\", { attrs: { value: \"service\" } }, [\n                _vm._v(\"Service\")\n              ]),\n              _c(\"option\", { attrs: { value: \"invoice\" } }, [\n                _vm._v(\"Invoice\")\n              ]),\n              _c(\"option\", { attrs: { value: \"delivery\" } }, [\n                _vm._v(\"Delivery\")\n              ])\n            ]\n          )\n        ]),\n        _vm.errors.has(\"type\")\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"text-danger invalid-feedback\",\n                staticStyle: { display: \"block\" }\n              },\n              [_vm._v(_vm._s(_vm.errors.first(\"type\")))]\n            )\n          : _vm._e()\n      ]),\n      _c(\"div\", { staticClass: \"form-group\" }, [\n        _c(\"label\", { staticClass: \"form-control-label\" }, [_vm._v(\"Driver\")]),\n        _c(\"div\", { staticClass: \"has-label\" }, [\n          _c(\n            \"select\",\n            {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.model.driver_id,\n                  expression: \"model.driver_id\"\n                }\n              ],\n              staticClass: \"form-control\",\n              attrs: { id: \"driver\", name: \"driver\" },\n              on: {\n                change: function($event) {\n                  var $$selectedVal = Array.prototype.filter\n                    .call($event.target.options, function(o) {\n                      return o.selected\n                    })\n                    .map(function(o) {\n                      var val = \"_value\" in o ? o._value : o.value\n                      return val\n                    })\n                  _vm.$set(\n                    _vm.model,\n                    \"driver_id\",\n                    $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n                  )\n                }\n              }\n            },\n            _vm._l(_vm.drivers, function(driver, key) {\n              return _c(\n                \"option\",\n                { key: key, domProps: { value: driver.id } },\n                [\n                  _vm._v(\n                    _vm._s(driver.first_name) + \" \" + _vm._s(driver.last_name)\n                  )\n                ]\n              )\n            }),\n            0\n          )\n        ]),\n        _vm.errors.has(\"driver\")\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"text-danger invalid-feedback\",\n                staticStyle: { display: \"block\" }\n              },\n              [_vm._v(_vm._s(_vm.errors.first(\"driver\")))]\n            )\n          : _vm._e()\n      ]),\n      _c(\"div\", { staticClass: \"form-group\" }, [\n        _c(\"label\", { staticClass: \"form-control-label\" }, [\n          _vm._v(\"Customer\")\n        ]),\n        _c(\"div\", { staticClass: \"has-label\" }, [\n          _c(\n            \"select\",\n            {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.model.customer_id,\n                  expression: \"model.customer_id\"\n                },\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"required\",\n                  expression: \"'required'\"\n                }\n              ],\n              staticClass: \"form-control\",\n              attrs: { id: \"driver\", name: \"customer\" },\n              on: {\n                change: function($event) {\n                  var $$selectedVal = Array.prototype.filter\n                    .call($event.target.options, function(o) {\n                      return o.selected\n                    })\n                    .map(function(o) {\n                      var val = \"_value\" in o ? o._value : o.value\n                      return val\n                    })\n                  _vm.$set(\n                    _vm.model,\n                    \"customer_id\",\n                    $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n                  )\n                }\n              }\n            },\n            _vm._l(_vm.customers, function(el, key) {\n              return _c(\"option\", { key: key, domProps: { value: el.id } }, [\n                _vm._v(_vm._s(el.name))\n              ])\n            }),\n            0\n          )\n        ]),\n        _vm.errors.has(\"customer\")\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"text-danger invalid-feedback\",\n                staticStyle: { display: \"block\" }\n              },\n              [_vm._v(_vm._s(_vm.errors.first(\"customer\")))]\n            )\n          : _vm._e()\n      ]),\n      _c(\"div\", { staticClass: \"form-group\" }, [\n        _c(\"label\", { staticClass: \"form-control-label\" }, [\n          _vm._v(\"Warehouse\")\n        ]),\n        _c(\"div\", { staticClass: \"has-label\" }, [\n          _c(\n            \"select\",\n            {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.model.warehouse_id,\n                  expression: \"model.warehouse_id\"\n                }\n              ],\n              staticClass: \"form-control\",\n              attrs: { id: \"warehouse\", name: \"warehouse\" },\n              on: {\n                change: function($event) {\n                  var $$selectedVal = Array.prototype.filter\n                    .call($event.target.options, function(o) {\n                      return o.selected\n                    })\n                    .map(function(o) {\n                      var val = \"_value\" in o ? o._value : o.value\n                      return val\n                    })\n                  _vm.$set(\n                    _vm.model,\n                    \"warehouse_id\",\n                    $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n                  )\n                }\n              }\n            },\n            _vm._l(_vm.warehouses, function(el, key) {\n              return _c(\"option\", { key: key, domProps: { value: el.id } }, [\n                _vm._v(_vm._s(el.name))\n              ])\n            }),\n            0\n          )\n        ]),\n        _vm.errors.has(\"warehouse\")\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"text-danger invalid-feedback\",\n                staticStyle: { display: \"block\" }\n              },\n              [_vm._v(_vm._s(_vm.errors.first(\"warehouse\")))]\n            )\n          : _vm._e()\n      ]),\n      _c(\"base-input\", {\n        attrs: { label: \"Date\" },\n        scopedSlots: _vm._u([\n          {\n            key: \"default\",\n            fn: function(ref) {\n              var focus = ref.focus\n              var blur = ref.blur\n              return _c(\"flat-picker\", {\n                staticClass: \"form-control datepicker\",\n                attrs: { config: { allowInput: true } },\n                on: { \"on-open\": focus, \"on-close\": blur },\n                model: {\n                  value: _vm.model.date,\n                  callback: function($$v) {\n                    _vm.$set(_vm.model, \"date\", $$v)\n                  },\n                  expression: \"model.date\"\n                }\n              })\n            }\n          }\n        ])\n      }),\n      _c(\"base-input\", {\n        attrs: { label: \"Time\" },\n        scopedSlots: _vm._u([\n          {\n            key: \"default\",\n            fn: function(ref) {\n              var focus = ref.focus\n              var blur = ref.blur\n              return _c(\"flat-picker\", {\n                staticClass: \"form-control datepicker\",\n                attrs: {\n                  config: {\n                    enableTime: true,\n                    noCalendar: true,\n                    dateFormat: \"H:i:ss\"\n                  }\n                },\n                on: { \"on-open\": focus, \"on-close\": blur },\n                model: {\n                  value: _vm.model.time,\n                  callback: function($$v) {\n                    _vm.$set(_vm.model, \"time\", $$v)\n                  },\n                  expression: \"model.time\"\n                }\n              })\n            }\n          }\n        ])\n      }),\n      _c(\n        \"base-checkbox\",\n        {\n          model: {\n            value: _vm.model.signature,\n            callback: function($$v) {\n              _vm.$set(_vm.model, \"signature\", $$v)\n            },\n            expression: \"model.signature\"\n          }\n        },\n        [_vm._v(\"Require Signature\")]\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"text-right\" },\n        [\n          _c(\n            \"base-button\",\n            {\n              staticClass: \"my-4\",\n              attrs: {\n                type: \"warning\",\n                disabled: _vm.submitting ? true : false\n              },\n              on: {\n                click: function($event) {\n                  return _vm.cancel()\n                }\n              }\n            },\n            [_vm._v(\"Cancel\")]\n          ),\n          _c(\n            \"base-button\",\n            {\n              staticClass: \"my-4\",\n              attrs: {\n                type: \"primary\",\n                disabled: _vm.submitting ? true : false\n              },\n              on: {\n                click: function($event) {\n                  return _vm.create()\n                }\n              }\n            },\n            [_vm._v(\"Create\")]\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}