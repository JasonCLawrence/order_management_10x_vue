{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jlawrence/10x/apps/OmsVue/src/views/Orders/Invoice.vue?vue&type=style&index=1&lang=css&","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/views/Orders/Invoice.vue","mtime":1585672524045},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.wide-modal {\n    max-width: 900px !important;\n}\n",{"version":3,"sources":["Invoice.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2RA;AACA;AACA","file":"Invoice.vue","sourceRoot":"src/views/Orders","sourcesContent":["<template>\n    <div>\n        <h6 class=\"heading-small text-muted mb-4\">Invoice</h6>\n        <div\n            v-if=\"invoiceItems && invoiceItems.length == 0\"\n            class=\"text-center\"\n            style=\"margin:5em 0;\"\n        >\n            No Invoice items created as yet..\n            <br />\n            <br />\n            <base-button type=\"primary\" @click=\"addInvoiceItem()\">Add Your First Invoice Item</base-button>\n        </div>\n        <template v-else>\n            <form @submit.prevent=\"update()\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <b>Item</b>\n                    </div>\n                    <div class=\"col-md-1\">\n                        <b>Qty</b>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <b>Price</b>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <b>Total</b>\n                    </div>\n                    <div class=\"col-md-1\"></div>\n                </div>\n\n                <div class=\"row invoice-item\" v-for=\"(item, index) in invoiceItems\" :key=\"index\">\n                    <template v-if=\"invoiceItems[index].deleted == true\" class=\"text-strikethrough\">\n                        <div class=\"col-md-6 strike pad-12\">{{ invoiceItems[index].item }}</div>\n                        <div class=\"col-md-1 strike\">{{ invoiceItems[index].quantity }}</div>\n                        <div class=\"col-md-2 strike\">{{ invoiceItems[index].price }}</div>\n                        <div\n                            class=\"col-md-2 line-total strike\"\n                        >${{currency(invoiceItems[index].price * invoiceItems[index].quantity)}}</div>\n                        <div class=\"col-md-1\">\n                            <base-button block type=\"success\" @click=\"restoreInvoiceItem(index)\">\n                                <i class=\"ni ni-fat-add\"></i>\n                            </base-button>\n                        </div>\n                    </template>\n                    <template v-else>\n                        <div class=\"col-md-6\">\n                            <input\n                                placeholder\n                                name=\"name\"\n                                class=\"form-control\"\n                                v-model=\"invoiceItems[index].item\"\n                            />\n                        </div>\n                        <div class=\"col-md-1\">\n                            <input\n                                placeholder\n                                type=\"number\"\n                                name=\"name\"\n                                class=\"form-control\"\n                                v-model=\"invoiceItems[index].quantity\"\n                            />\n                        </div>\n                        <div class=\"col-md-2\">\n                            <input\n                                placeholder\n                                type=\"number\"\n                                min=\"0.01\"\n                                max=\"100000\"\n                                name=\"name\"\n                                class=\"form-control\"\n                                v-model=\"invoiceItems[index].price\"\n                            />\n                        </div>\n                        <div\n                            class=\"col-md-2 line-total\"\n                        >${{currency(invoiceItems[index].price * invoiceItems[index].quantity)}}</div>\n                        <div class=\"col-md-1\">\n                            <base-button block type=\"warning\" @click=\"deleteInvoiceItem(index)\">\n                                <i class=\"ni ni-fat-remove\"></i>\n                            </base-button>\n                        </div>\n                    </template>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <base-button\n                            size=\"sm\"\n                            type=\"primary\"\n                            @click=\"addInvoiceItem()\"\n                            :disabled=\"submitting?true:false\"\n                        >{{ \"Add Item\" }}</base-button>\n                    </div>\n                </div>\n\n                <div v-if=\"invoiceItems.length != 0\" class=\"row invoice-total\">\n                    <div class=\"col-md-8\"></div>\n                    <div class=\"col-md-1\">\n                        <b>Total</b>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <b>${{ currency(invoiceTotal) }}</b>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <base-button\n                            type=\"primary\"\n                            @click=\"downloadInvoice()\"\n                            :disabled=\"submitting?true:false\"\n                        >Download</base-button>\n                    </div>\n                    <div class=\"col-md-6 text-right\">\n                        <base-button\n                            type=\"primary\"\n                            @click=\"updateInvoice()\"\n                            :disabled=\"submitting?true:false\"\n                        >{{ submitting?\"Saving Changes...\":\"Save Changes\" }}</base-button>\n                    </div>\n                </div>\n            </form>\n        </template>\n    </div>\n</template>\n\n<script>\nimport api from '@/api/order'\nimport { uuidv4 } from '@/utils'\nimport xlsx from 'xlsx'\nimport ImportInvoiceDialog from './ImportInvoiceDialog'\n\n//https://stackoverflow.com/questions/6463439/how-to-open-a-file-browse-dialog-using-javascript\n\nexport default {\n    name: 'invoice',\n    components: { ImportInvoiceDialog },\n    data() {\n        return {\n            invoiceItems: [],\n            submitting: false,\n            importDailogVisible: false,\n            hash: null,\n        }\n    },\n    methods: {\n        update() {},\n        currency(num) {\n            return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\n        },\n        /* Task functions */\n        addInvoiceItem() {\n            this.invoiceItems.push({\n                item: '',\n                hash: uuidv4(),\n                description: '',\n                quantity: 0,\n                price: 0,\n                deleted: false,\n            })\n        },\n        deleteInvoiceItem(index) {\n            this.invoiceItems[index].deleted = true\n        },\n        restoreInvoiceItem(index) {\n            this.invoiceItems[index].deleted = false\n        },\n        downloadInvoice() {\n            this.submitting = true\n            api.updateInvoice(this.$route.params.id, this.invoiceItems)\n                .then(result => {\n                    let items = result.data.success.data\n                    this.invoiceItems = items.map(x => {\n                        x.deleted = false\n                        return x\n                    })\n\n                    this.hashItems()\n\n                    api.downloadInvoice(this.$route.params.id)\n                })\n                .finally(() => {\n                    this.submitting = false\n                })\n        },\n        updateInvoice() {\n            return new Promise((resolve, reject) => {\n                this.submitting = true\n                api.updateInvoice(this.$route.params.id, this.invoiceItems)\n                    .then(result => {\n                        this.$swal({\n                            title: 'Invoice Updated',\n                            type: 'success',\n                        })\n\n                        let items = result.data.success.data\n                        this.invoiceItems = items.map(x => {\n                            x.deleted = false\n                            return x\n                        })\n\n                        this.hashItems()\n                        resolve()\n                    })\n                    .catch(error => {\n                        this.$swal({\n                            title: error.response.data.error.message,\n                            type: 'error',\n                        })\n                        reject()\n                    })\n                    .finally(() => {\n                        this.submitting = false\n                    })\n            })\n        },\n        getHash() {\n            return JSON.stringify(this.invoiceItems)\n        },\n        hashItems() {\n            this.hash = this.getHash()\n        },\n        hasUnsavedChanges() {\n            let newHash = this.getHash()\n            if (this.hash != newHash) return true\n            return false\n        },\n    },\n    mounted() {\n        api.fetchInvoice(this.$route.params.id).then(result => {\n            let invoiceItems = result.data.success.data\n            this.invoiceItems = invoiceItems.map(x => {\n                x.deleted = false\n                return x\n            })\n\n            this.hashItems()\n        })\n    },\n    computed: {\n        invoiceTotal() {\n            let total = 0\n            for (let item of this.invoiceItems) {\n                if (item.deleted) continue\n                total += item.price * item.quantity\n            }\n\n            return total\n        },\n    },\n}\n</script>\n<style scoped>\n.hide-file-picker {\n    position: fixed;\n    top: -1000;\n}\n\n.invoice-item {\n    margin-bottom: 10px;\n}\n\n.pad-12 {\n    padding: 12px !important;\n}\n\n.invoice-total {\n    margin-bottom: 20px;\n}\n\n.line-total {\n    padding: 0.5em 0;\n}\n\n.strike {\n    text-decoration: line-through;\n    padding: 12px 27px;\n    font-weight: bold;\n    color: #fa3a0e;\n}\n</style>\n<style>\n.wide-modal {\n    max-width: 900px !important;\n}\n</style>"]}]}