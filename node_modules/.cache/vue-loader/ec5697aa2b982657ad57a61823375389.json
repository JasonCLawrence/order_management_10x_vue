{"remainingRequest":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jlawrence/10x/apps/OmsVue/src/views/Customers/ViewCustomer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jlawrence/10x/apps/OmsVue/src/views/Customers/ViewCustomer.vue","mtime":1585672524041},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jlawrence/10x/apps/OmsVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport api from '@/api/customer'\nimport LocationPicker from '@/components/Map/LocationPicker'\nimport { LMap, LTileLayer, LMarker } from 'vue2-leaflet'\n\nexport default {\n    name: 'view-customer',\n    components: { LMap, LTileLayer, LMarker, LocationPicker },\n    data() {\n        return {\n            model: {\n                id: 0,\n                name: '',\n                address: '',\n                lat: '',\n                long: '',\n                center: L.latLng(18.002804952844535, -76.78970255393327),\n            },\n            updating: false,\n        }\n    },\n    methods: {\n        update() {\n            this.updating = true\n\n            this.model.lat = this.model.center.lat\n            this.model.long = this.model.center.lng\n            this.$validator.validate().then(valid => {\n                if (valid) {\n                    api.update(this.model.id, this.model)\n                        .then(() => {\n                            this.$swal({\n                                title: 'Customer Updated',\n                                type: 'success',\n                            })\n                        })\n                        .catch(error => {\n                            this.$swal({\n                                title: error.response.data.error.message,\n                                type: 'error',\n                            })\n                        })\n                        .finally(() => {\n                            this.updating = false\n                        })\n                } else {\n                    this.updating = false\n                }\n            })\n        },\n    },\n    mounted() {\n        api.fetchById(this.$route.params.id).then(result => {\n            let model = result.data.success.data\n\n            model.center = new L.latLng(\n                model.lat ? model.lat : 0,\n                model.long ? model.long : 0\n            )\n\n            this.model = model\n        })\n    },\n}\n",{"version":3,"sources":["ViewCustomer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ViewCustomer.vue","sourceRoot":"src/views/Customers","sourcesContent":["<template>\n    <div>\n        <base-header class=\"header pb-8 pt-5 pt-lg-5 d-flex\" />\n\n        <div class=\"container-fluid mt--7 pb-4\">\n            <div class=\"row\">\n                <div class=\"col-xl-8 order-xl-1\">\n                    <card shadow type=\"secondary\">\n                        <div slot=\"header\" class=\"bg-white border-0\">\n                            <div class=\"row align-items-center\">\n                                <div class=\"col-8\">\n                                    <h3 class=\"mb-0\">Customer</h3>\n                                </div>\n                                <div class=\"col-4 text-right\"></div>\n                            </div>\n                        </div>\n                        <template>\n                            <div class=\"pl-lg-4\">\n                                <form @submit.prevent=\"update()\">\n                                    <div class=\"row\">\n                                        <div class=\"col-lg-12\">\n                                            <base-input\n                                                alternative\n                                                label=\"Name\"\n                                                placeholder=\"John\"\n                                                v-model=\"model.name\"\n                                                name=\"name\"\n                                                :error=\"errors.first('name')\"\n                                            />\n                                        </div>\n                                        <div class=\"col-lg-12\">\n                                            <base-input\n                                                alternative\n                                                label=\"Email\"\n                                                placeholder=\"email\"\n                                                v-model=\"model.email\"\n                                                name=\"email\"\n                                                :error=\"errors.first('email')\"\n                                                v-validate=\"'required|email'\"\n                                            />\n                                        </div>\n                                        <div class=\"col-lg-12\">\n                                            <base-input\n                                                alternative\n                                                label=\"Address\"\n                                                placeholder\n                                                v-model=\"model.address\"\n                                                name=\"address\"\n                                                :error=\"errors.first('address')\"\n                                            />\n                                        </div>\n                                        <div class=\"col-md-12\">\n                                            <location-picker v-model=\"model.center\" />\n                                        </div>\n                                    </div>\n\n                                    <div class=\"row\">\n                                        <div class=\"col-md-12\">\n                                            <base-button\n                                                @click=\"update()\"\n                                                class=\"float-right\"\n                                                :disabled=\"updating?true:false\"\n                                            >{{ updating?\"Saving Changes...\":\"Save Changes\" }}</base-button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </template>\n                    </card>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport api from '@/api/customer'\nimport LocationPicker from '@/components/Map/LocationPicker'\nimport { LMap, LTileLayer, LMarker } from 'vue2-leaflet'\n\nexport default {\n    name: 'view-customer',\n    components: { LMap, LTileLayer, LMarker, LocationPicker },\n    data() {\n        return {\n            model: {\n                id: 0,\n                name: '',\n                address: '',\n                lat: '',\n                long: '',\n                center: L.latLng(18.002804952844535, -76.78970255393327),\n            },\n            updating: false,\n        }\n    },\n    methods: {\n        update() {\n            this.updating = true\n\n            this.model.lat = this.model.center.lat\n            this.model.long = this.model.center.lng\n            this.$validator.validate().then(valid => {\n                if (valid) {\n                    api.update(this.model.id, this.model)\n                        .then(() => {\n                            this.$swal({\n                                title: 'Customer Updated',\n                                type: 'success',\n                            })\n                        })\n                        .catch(error => {\n                            this.$swal({\n                                title: error.response.data.error.message,\n                                type: 'error',\n                            })\n                        })\n                        .finally(() => {\n                            this.updating = false\n                        })\n                } else {\n                    this.updating = false\n                }\n            })\n        },\n    },\n    mounted() {\n        api.fetchById(this.$route.params.id).then(result => {\n            let model = result.data.success.data\n\n            model.center = new L.latLng(\n                model.lat ? model.lat : 0,\n                model.long ? model.long : 0\n            )\n\n            this.model = model\n        })\n    },\n}\n</script>\n<style></style>\n"]}]}